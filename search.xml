<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>windows下Nodejs多版本切换</title>
      <link href="/posts/2ec3f20f/"/>
      <url>/posts/2ec3f20f/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为<a href="http://tingtas.com/posts/20411494/">electron-vue开发实战</a>中所遇到的问题<code>ERROR in Template execution failed: ReferenceError: process is not defined</code>是<code>nodejs</code>版本导致的，而其它项目中需要用到<code>v10.16.0</code>版本的<code>nodejs</code>，所以需要在windows下安装多个版本进行切换。查了一下资料，让我发现了<a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noopener">nvm-windows</a>。</p><h2 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h2><h3 id="卸载现有node"><a href="#卸载现有node" class="headerlink" title="卸载现有node"></a>卸载现有node</h3><p>请注意，在安装<code>NVM for Windows</code>之前，您需要卸载任何现有版本的<code>node.js</code>. 还删除可能保留的任何现有<code>nodejs</code>安装目录（例如，<code>C：\ Program Files \ nodejs</code>）。<code>NVM</code>生成的符号链接不会覆盖现有（甚至是空的）安装目录。</p><h3 id="卸载现有的npm"><a href="#卸载现有的npm" class="headerlink" title="卸载现有的npm"></a>卸载现有的npm</h3><p>您还应该删除现有的<code>npm</code>安装位置（例如<code>C：\ Users &lt;user&gt; \ AppData \ Roaming \ npm</code>），以便正确使用<code>nvm</code>安装位置。</p><h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><p>在<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">releases</a>中下载最新版本<a href="https://github.com/coreybutler/nvm-windows/releases/download/1.1.7/nvm-setup.zip" target="_blank" rel="noopener">nvm-setup.zip</a>，解压后，是一个安装文件，直接安装即可。</p><blockquote><p>由于国内在一些情况下有些特殊。Node.js 官方镜像源又在国外，经常通过 nvm 安装 Node.js 时，速度比较慢，或者没有响应。</p><p>根据这种情况，nvm 允许更改安装的镜像源，我们可以将镜像源切换到国内的淘宝提供的镜像源。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> NVM_NODEJS_ORG_MIRROR=http://npm.taobao.org/mirrors/node</span><br></pre></td></tr></table></figure><h3 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// nvm install &lt;version&gt; [arch]</span><br><span class="line">nvm install 12.3.1</span><br></pre></td></tr></table></figure><h3 id="切换版本"><a href="#切换版本" class="headerlink" title="切换版本"></a>切换版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use 12.3.1 [32|64]</span><br></pre></td></tr></table></figure><h3 id="卸载node"><a href="#卸载node" class="headerlink" title="卸载node"></a>卸载node</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm uninstall 12.3.1</span><br></pre></td></tr></table></figure><h3 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//查看安装的node版本列表</span><br><span class="line">nvm list //or ls</span><br><span class="line"></span><br><span class="line">//启用node.js版本管理</span><br><span class="line">nvm on</span><br><span class="line"></span><br><span class="line">//禁用node.js版本管理</span><br><span class="line">nvm off</span><br><span class="line"></span><br><span class="line">// 设置node镜像。国内可以使用：https://npm.taobao.org/mirrors/node/</span><br><span class="line">nvm node_mirror &lt;node_mirror_url&gt;</span><br><span class="line"></span><br><span class="line">// 设置npm镜像。中国人可以使用https://npm.taobao.org/mirrors/npm/</span><br><span class="line">nvm npm_mirror &lt;npm_mirror_url&gt;</span><br></pre></td></tr></table></figure><h3 id="升级nvm-windows"><a href="#升级nvm-windows" class="headerlink" title="升级nvm-windows"></a>升级nvm-windows</h3><p><strong>要升级<code>nvm-windows</code></strong>，请运行新安装程序。它将安全地覆盖需要更新的文件，而无需触及<code>node.js</code>安装。确保使用相同的安装和符号链接文件夹。如果您最初安装到默认位置，则只需在每个窗口上单击“下一步”，直到完成为止。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><blockquote><p><strong>请注意</strong>，您安装的任何全局<code>npm</code>模块<strong>都不会</strong>在已安装的各种版本的<code>node.js</code>之间共享。此外，您正在使用的<code>node</code>版本可能不支持某些<code>npm</code>模块，因此请在工作时注意您的环境。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序之初探mpvue</title>
      <link href="/posts/8b38b52d/"/>
      <url>/posts/8b38b52d/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近两年小程序之名如雷贯耳，现在有机会就来探上一探，实际项目中对vue的了解程度比较多，所以就选择了美团开源的<a href="http://mpvue.com/" target="_blank" rel="noopener"><code>mpvue</code></a>。</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><p>根据<code>mpvue</code>官网的<a href="http://mpvue.com/mpvue/quickstart" target="_blank" rel="noopener">五分钟上手教程</a>迅速搭建了相关环境，相关命令搬运一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 先检查下 Node.js 是否安装成功</span></span><br><span class="line">$ node -v</span><br><span class="line">v8.9.0</span><br><span class="line"></span><br><span class="line">$ npm -v</span><br><span class="line">5.6.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 由于众所周知的原因，可以考虑切换源为 taobao 源</span></span><br><span class="line">$ npm <span class="built_in">set</span> registry https://registry.npm.taobao.org/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 全局安装 vue-cli</span></span><br><span class="line"><span class="comment"># 一般是要 sudo 权限的</span></span><br><span class="line">$ npm install --global vue-cli@2.9</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 创建一个基于 mpvue-quickstart 模板的新项目</span></span><br><span class="line"><span class="comment"># 新手一路回车选择默认就可以了</span></span><br><span class="line">$ vue init mpvue/mpvue-quickstart my-project</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 安装依赖，走你</span></span><br><span class="line">$ <span class="built_in">cd</span> my-project</span><br><span class="line">$ npm install</span><br><span class="line">$ npm run dev</span><br></pre></td></tr></table></figure><p>剩下的<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/devtools.html" target="_blank" rel="noopener">微信开发者工具</a>以及关于它的配置，这里就不多详解了，还是比较简单的。</p><h2 id="mpvue项目结构"><a href="#mpvue项目结构" class="headerlink" title="mpvue项目结构"></a>mpvue项目结构</h2><p>我们可以看到类似如下的项目文件结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">my-project</span><br><span class="line">├── package.json</span><br><span class="line">├── project.config.json       </span><br><span class="line">├── static            </span><br><span class="line">├── src</span><br><span class="line">│    ├── components</span><br><span class="line">│    ├── pages</span><br><span class="line">│└── index</span><br><span class="line">│           ├── index.vue</span><br><span class="line">│           ├── main.js</span><br><span class="line">│           └── main.json</span><br><span class="line">│    ├── utils</span><br><span class="line">│    ├── App.vue</span><br><span class="line">│    └── main.js</span><br><span class="line">├── config</span><br><span class="line">│   ├── index.js</span><br><span class="line">│   ├── dev.env.js</span><br><span class="line">│   └── prod.env.js</span><br><span class="line">└── build</span><br></pre></td></tr></table></figure><ol><li><p><strong>package.json文件</strong></p><p>包管理文件，各种需要<code>npm install</code>的第三方库都在这里面</p></li><li><p><strong>project.config.json文件</strong></p><p>用于管理微信开发者工具的小程序项目的配置文件，其中记录了小程序的appid、代码主目录、以及编译选项等等信息，在微信开发者工具中导入小程序项目的时候主要是通过该配置文件读取和写入配置信息。</p></li><li><p><strong>static目录</strong></p><p>可以用于存放各种小程序本地静态资源，如图片、文本文件等。代码中可通过相对路径或绝对路径进行访问</p></li><li><p><strong>build目录</strong></p><p>一些用于项目编译打包的node.js脚本和webpack配置文件。一般情况下不需要修改这些文件。</p></li><li><p><strong>config目录</strong></p><p>包含了用于开发和生产环境下的不同配置，<code>dev.env.js</code>用于开发环境，<code>prod.env.js</code>用于生产环境，你可以将开发阶段和生产阶段不一样的信息（如后台API的url地址等）配置到这两个文件中去，然后在代码中以变量的形式进行引用。</p></li><li><p><strong>src目录</strong></p><p>是我们主要进行小程序功能编写的地方。默认生成的demo代码为我们创建了几个子目录：<code>components</code>、<code>pages</code>和<code>utils</code>，还有2个文件：<code>App.vue</code>和<code>main.js</code>。其实它们都不是必须的，可以按照自己的风格进行定义和配置。不过默认创建的这个结构基本上是一个约定俗成的结构了，比较易于理解，所以我们可以遵循这个结构进行开发。</p><ul><li><p>components：在实际开发中，我们可以尽量将界面上可复用的部分，提取成vue组件放入该目录</p></li><li><p>pages：存放小程序的页面。请遵循每个小程序页面放入一个单独子目录的组织形式</p><ul><li>index.vue：页面的view内容</li><li>main.js:引入<code>index.vue</code>并创建Vue实例</li><li>main.json:页面相关配置</li></ul></li><li><p>utils：可选（可删）。可以将代码中一些公用工具函数组织成模块放入该目录下</p></li><li><p>可新建其他目录，存放你希望组织起来的代码。比如公用的业务逻辑代码、请求后台API的代码等等</p></li><li><p>main.js + App.vue：这两个是入口文件，相当于原生小程序框架中的<code>app.json</code>和<code>app.js</code>的复合体。</p></li></ul></li></ol><h2 id="导入iview-weapp的UI组件"><a href="#导入iview-weapp的UI组件" class="headerlink" title="导入iview-weapp的UI组件"></a>导入iview-weapp的UI组件</h2><p>到 <a href="https://github.com/TalkingData/iview-weapp" target="_blank" rel="noopener">GitHub</a> 下载 iView Weapp 的代码，将 <code>dist</code> 目录拷贝到自己项目中的<code>static</code>文件夹下。</p><ol><li><p>添加需要的组件到对应页面的json中</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// src/pages/main.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"navigationBarTitleText"</span>: <span class="string">"首页"</span>,</span><br><span class="line">  <span class="attr">"usingComponents"</span>: &#123;</span><br><span class="line">    <span class="attr">"i-button"</span>: <span class="string">"../../../static/iview/button/index"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code></code>index.vue`中使用组件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">bind:click</span>=<span class="string">"handleClick"</span>&gt;</span>这是一个按钮<span class="tag">&lt;/<span class="name">i-button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="使用flyio进行数据请求"><a href="#使用flyio进行数据请求" class="headerlink" title="使用flyio进行数据请求"></a>使用flyio进行数据请求</h2><blockquote><p><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fwendux%2Ffly" target="_blank" rel="noopener">Fly.js</a> 一个基于Promise的、强大的、支持多种JavaScript运行时的http请求库. 有了它，您可以使用一份http请求代码在浏览器、微信小程序、Weex、Node、React Native、快应用中都能正常运行。同时可以方便配合主流前端框架 ，最大可能的实现 <em>Write Once Run Everywhere</em>。</p></blockquote><ol><li><p>安装<code>flyio</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save flyio</span><br></pre></td></tr></table></figure></li><li><p>在<code>main.js</code>中引入<code>flyio</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> Fly <span class="keyword">from</span> <span class="string">'flyio/dist/npm/wx'</span></span><br><span class="line"></span><br><span class="line">Vue.prototype.$http = <span class="keyword">new</span> Fly()</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line">App.mpType = <span class="string">'app'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(App)</span><br><span class="line">app.$mount()</span><br></pre></td></tr></table></figure></li><li><p>在代码中使用<code>flyio</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.vue</span></span><br><span class="line">click()&#123;</span><br><span class="line">    <span class="keyword">this</span>.$http.get(&#123;</span><br><span class="line">        url: <span class="string">'***'</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">          <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res</span><br><span class="line">      &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><ul><li><a href="https://www.jianshu.com/p/2e98cc166dbd" target="_blank" rel="noopener">使用mpvue开发小程序教程</a></li><li><a href="https://segmentfault.com/a/1190000014039585" target="_blank" rel="noopener">在小程序/mpvue中使用flyio发起网络请求</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mpvue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法笔记</title>
      <link href="/posts/cdde9d4b/"/>
      <url>/posts/cdde9d4b/</url>
      
        <content type="html"><![CDATA[<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><ul><li><p>代码</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~我们向往天上的云端，也要看看脚下的尘埃。~~</span><br></pre></td></tr></table></figure></li><li><p>效果</p><p>  <del>我们向往天上的云端，也要看看脚下的尘埃。</del></p></li></ul><h3 id="自定义折叠内容"><a href="#自定义折叠内容" class="headerlink" title="自定义折叠内容"></a>自定义折叠内容</h3><ul><li><p>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;details&gt;</span><br><span class="line">  &lt;summary&gt;点击查看&lt;/summary&gt;</span><br><span class="line">  **我们向往天上的云端，也要看看脚下的尘埃。**</span><br><span class="line">&lt;/details&gt;</span><br></pre></td></tr></table></figure></li><li><p>效果</p><details><br>  <summary>点击查看</summary><br>  <strong>我们向往天上的云端，也要看看脚下的尘埃。</strong><br></details></li></ul><h3 id="表格语法"><a href="#表格语法" class="headerlink" title="表格语法"></a>表格语法</h3><ul><li><p>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| 默认左对齐|手动左对齐|手动居中对齐|手动右对齐|</span><br><span class="line">| --- | :--- | :---: |---:|</span><br><span class="line">| 左对齐 |左对齐| 居中对齐|右对齐|</span><br></pre></td></tr></table></figure></li><li><p>效果</p></li></ul><table><thead><tr><th>默认左对齐</th><th style="text-align:left">手动左对齐</th><th style="text-align:center">手动居中对齐</th><th style="text-align:right">手动右对齐</th></tr></thead><tbody><tr><td>左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对齐</td><td style="text-align:right">右对齐</td></tr></tbody></table><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><ul><li><p>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Markdown footnotes[^number]</span><br><span class="line">[^number]: &lt;https://github.com/LouisBarranqueiro/hexo-footnotes&gt;</span><br><span class="line">// or inline footnote</span><br><span class="line">Markdown footnotes[^number](inline footnote)</span><br></pre></td></tr></table></figure></li><li><p>效果</p><p>Markdown footnotes<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p></li></ul><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><a href="https://github.com/LouisBarranqueiro/hexo-footnotes" target="_blank" rel="noopener">https://github.com/LouisBarranqueiro/hexo-footnotes</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多个字体图标文件的合成</title>
      <link href="/posts/1fd66b66/"/>
      <url>/posts/1fd66b66/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>一直都在使用<a href="http://www.iconfont.cn/" target="_blank" rel="noopener">Iconfont-阿里巴巴矢量图标库</a>中的图标，但是总归是不全的，所以会通过其它<br>途径获得图标，那么现在就会有多份图标文件，我们该如何去合并它们再应用到项目中去呢？</p><h3 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h3><p>这个网站<a href="https://icomoon.io/app/#/select" target="_blank" rel="noopener">IcoMoon</a>可以将<code>.svg</code>的字体图标文件解析出来，并生成新的字体文件包。<br>操作流程如下：</p><ol><li>点击左上角的<code>Import Icons</code>导入图标</li><li>选中要保留的图标</li><li>点击右下角的<code>Generate Font</code></li><li>生成成功后点击<code>Download</code>即可</li></ol><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>因为项目中之前一直使用<code>Iconfont</code>的图标文件，所以为了不更改大量代码，我们需要将<code>IconMoon</code>导出的字体图标<br>改成<code>Iconfont</code>的类型，其实很简单，如下：</p><ol><li>将<code>IconMoon/fonts</code>的四个文件全部重命名为<code>iconfont</code>。</li><li>将<code>IconMoon/style.css</code>中的图标部分全部复制，替换掉<code>iconfont.css</code>中的图标部分。</li></ol><blockquote><p>图标部分的代码形式</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon-dingdan1</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\e600"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.将<code>Iconfont</code>之前的<code>woff</code>改为<code>url(&#39;iconfont.woff?t=1532329070422&#39;) format(&#39;woff&#39;),</code><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">font-face</span> &#123;<span class="attribute">font-family</span>: <span class="string">"iconfont"</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'iconfont.eot?t=1532329070422'</span>); <span class="comment">/* IE9*/</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'iconfont.eot?t=1532329070422#iefix'</span>) <span class="built_in">format</span>(<span class="string">'embedded-opentype'</span>), <span class="comment">/* IE6-IE8 */</span></span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'iconfont.woff?t=1532329070422'</span>) <span class="built_in">format</span>(<span class="string">'woff'</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'iconfont.ttf?t=1532329070422'</span>) <span class="built_in">format</span>(<span class="string">'truetype'</span>), <span class="comment">/* chrome, firefox, opera, Safari, Android, iOS 4.2+*/</span></span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'iconfont.svg?t=1532329070422#iconfont'</span>) <span class="built_in">format</span>(<span class="string">'svg'</span>); <span class="comment">/* iOS 4.1- */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字体图标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用jsDelivr加速Github仓库的图片作为博客的图床</title>
      <link href="/posts/4341d485/"/>
      <url>/posts/4341d485/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>搭建完blog后，操心的事儿就是blog中的图片如何存放了。最开始在<code>简书</code>中记录，然后图片上传到<code>简书</code>，再使用它的外链，不过这样太麻烦。再后来就折腾blog，从中了解到了一些图床，<code>七牛</code>、<code>微博</code>、<code>又拍云</code>等，不是收费就是出了防外链。免费的也有<code>SM.MS</code>，不过属于大杂烩，如果管理哪天关了服务，Blog上的文章大部分只有碎图了。</p><p>好在因为hexo主题，在<a href="http://jerryc.me/" target="_blank" rel="noopener">Jerryc</a>的blog中了解到他的图片链接都在<code>jsDelivr</code>域名下，然后就一顿百度Google，在Google搜到了这么一篇文章:<a href="https://blog.iljw.me/2019/05/jsdelivr-cdn-github.html" target="_blank" rel="noopener">使用 jsDelivr CDN 加速 Github 仓库的图片，以作为博客的图床</a>。</p><blockquote><p><strong>实际搭建了一下，以下内容摘抄自原文章内容，进行了简单的排版。</strong></p></blockquote><h3 id="关于jsDelivr"><a href="#关于jsDelivr" class="headerlink" title="关于jsDelivr"></a>关于jsDelivr</h3><p>jsDelivr 是国外的一家优秀的公共 CDN 服务提供商，也是首个「打通中国大陆（网宿公司运营）与海外的免费 CDN 服务」。jsDelivr 有一个十分好用的功能——<strong>它可以加速 Github 仓库的文件</strong>。我们可以借此搭建一个免费、全球访问速度超快的图床。</p><p><strong>声明：静态文件主要是缓存在 jsDelivr 的 CDN 节点上，确保 GitHub 承受最小的负载，并且你还可以从 GitHub 仓库获得快速简便的静态文件托管。</strong></p><blockquote><p>jsDelivr is a public, open-source CDN (Content Delivery Network) developed by <a href="https://prospectone.io/" target="_blank" rel="noopener">ProspectOne</a>, focused on performance, reliability, and security. It is free to use for everyone, with no bandwidth limits<a href="https://blog.iljw.me/2019/05/jsdelivr-cdn-github.html#fn2" target="_blank" rel="noopener">2</a>.</p><p>jsDelivr is the only public CDN with a valid ICP license issued by the Chinese government, and hundreds of locations directly in Mainland China.</p></blockquote><h3 id="实际搭建"><a href="#实际搭建" class="headerlink" title="实际搭建"></a>实际搭建</h3><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p>首先得在<code>GitHub</code>创建一个<strong>存放静态文件</strong>的仓库，这个无须多言。不会的<a href="https://wiki.jikexueyuan.com/project/github-basics/creat-new-repo.html" target="_blank" rel="noopener">点此链接</a>查看如何创建。</p><h4 id="获取token"><a href="#获取token" class="headerlink" title="获取token"></a>获取token</h4><ol><li><p>访问<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">https://github.com/settings/tokens</a>，点击<code>Generate new token</code>按钮</p><p><img src="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/jsdelivr-cdn-github/1.png" alt></p></li><li><p>填入<code>Note</code>，勾选<code>repo</code></p><p><img src="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/jsdelivr-cdn-github/2.png" alt></p></li><li><p>滚动到最下面点击<code>Generate token</code></p><p><img src="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/jsdelivr-cdn-github/3.png" alt></p></li><li><p>然后就将生成的<code>token</code>复制下来，后面在<code>PicGo</code>配置的时候会用到。</p><p><img src="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/jsdelivr-cdn-github/4.png" alt></p></li></ol><blockquote><p>如果没有复制并离开了此页面，是需要再生成一次的。进入之前输入的<code>Note</code>中会有一个<code>Regenerate token</code>,点击再生成一次就可以了。</p></blockquote><h4 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h4><ol><li><p>首先下载安装<code>PicGo</code>软件，Mac与Win都支持。下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></p></li><li><p>然后打开<code>PicGo</code>,进入到<code>图床设置</code>-&gt;<code>github图床</code>如下配置：</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/jsdelivr-cdn-github/5.png" alt></p><blockquote><ul><li>设定仓库名：填写你的仓库名称，格式：<code>用户名/仓库名</code></li><li>设定分支名：仓库的分支名，一般填写<code>master</code>就行</li><li>设定Token：之前复制下来的<code>token</code></li><li>指定存储路径：图片在仓库中的存储路径，<code>blog/image/</code>可自定义名称</li><li>设定自定义域名：访问图片的域名，例：<code>https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master</code><ul><li><code>gh</code>:代表GitHub</li><li><code>gorkys/CDN-Blog</code>:用户名/仓库名</li><li><code>@master</code>:分支名称</li></ul></li></ul></blockquote><p>一个完整的图片路径如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/jsdelivr-cdn-github/top.jpg</span><br></pre></td></tr></table></figure><h4 id="搞定了"><a href="#搞定了" class="headerlink" title="搞定了"></a>搞定了</h4><p>你可以通过 PicGo 方便地上传图片了，它支持拖拽、点击、剪贴板上传，上传后，图片链接直接复制的你的剪贴板中。</p><p>当然，你也可以通过 Git 命令，将本地图片批量上传到 Github 上，再替换成原文中的图片链接地址，以完成图片迁移的工作。</p><blockquote><p><strong>关于PicGo的使用，请参考<a href="https://picgo.github.io/PicGo-Doc/zh/" target="_blank" rel="noopener">官方文档</a></strong></p></blockquote><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>整个过程比较简单，创建 Github 仓库，并获取 token，填入 PicGo 配置即可完成。</p><ul><li>使用 jsDelivr 加速静态文件访问，能够优化博客体验。</li><li>在 Github 存储图片，利于博主对于图片的掌控。</li><li>使用 PicGo 的原因是因为能够方便地将上传图片到 Github，并直接获取 jsDelivr 的加速后的图片地址。</li></ul><p>Github 仓库的容量有 1G 的上限，对个人博客来说绰绰有余，我目前博客所使用图片大小现在是 10M 左右。若想 100% 使用，则我的博文最少也得有上千篇了。</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://blog.iljw.me/2019/05/jsdelivr-cdn-github.html" target="_blank" rel="noopener">使用 jsDelivr CDN 加速 Github 仓库的图片，以作为博客的图床</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Electron-vue开发实战之Electron入门</title>
      <link href="/posts/20411494/"/>
      <url>/posts/20411494/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近想学点新东西，对桌面端有些兴趣，就想学学<code>Electron</code>，想一个新的东西就得有一个项目作为实战基础，这样才有学习的动力与目标。</p><h2 id="Electron简要介绍"><a href="#Electron简要介绍" class="headerlink" title="Electron简要介绍"></a>Electron简要介绍</h2><p>见：<a href="https://molunerfinn.com/electron-vue-1/#Electron简要介绍" target="_blank" rel="noopener">Electron简要介绍</a></p><h2 id="Electron-vue简要介绍"><a href="#Electron-vue简要介绍" class="headerlink" title="Electron-vue简要介绍"></a>Electron-vue简要介绍</h2><p>见：<a href="https://molunerfinn.com/electron-vue-1/#electron-vue的简要介绍" target="_blank" rel="noopener">Electron-vue简要介绍</a></p><h2 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果你没有vue-cli的话需要全局安装</span></span><br><span class="line">npm install -g vue-cli</span><br><span class="line"><span class="comment"># 然后使用vue-cli来安装electron-vue的模板</span></span><br><span class="line">vue init simulatedgreg/electron-vue my-project</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line"><span class="built_in">cd</span> my-project</span><br><span class="line">npm install <span class="comment"># or yarn</span></span><br><span class="line"><span class="comment"># 进入开发模式</span></span><br><span class="line">npm run dev <span class="comment"># or yarn run dev</span></span><br></pre></td></tr></table></figure><p>如果你是windows用户，在安装期间遇到了关于<code>node-gyp</code>、C++库等方面的问题的话，请参考官方文档给出的<a href="https://simulatedgreg.gitbooks.io/electron-vue/content/en/getting_started.html#a-note-for-windows-users" target="_blank" rel="noopener">解决办法</a>。</p><p>如果上述都没有问题，那么你将会看到如下界面：</p><p><img src="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/electron-vue-1/1.png" alt></p><h2 id="过五关斩六将"><a href="#过五关斩六将" class="headerlink" title="过五关斩六将"></a>过五关斩六将</h2><blockquote><p>以上为理想状态，让我们看看现实是如何的残酷。</p></blockquote><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>因为一些原因在前段时间将<code>Nodejs</code>版本从<code>v8.3.0</code>升级到稳定版本<code>v10.16.0</code>。稳定版嘛，以为一切正常，然后<code>npm install</code>老项目的时候<code>node-sass</code>安装不上，最后就把<code>Nodejs</code>升级到了<code>v12.3.1</code>的开发版，最后就一切正常了。</p><p>以下是在如下环境下进行的操作：</p><ul><li><p><code>科学上网</code></p></li><li><p><code>nodejs v12.3.1</code></p></li><li><code>npm 忘记记录了</code></li><li><code>windows 10 专业版</code></li></ul><h3 id="踩坑开始"><a href="#踩坑开始" class="headerlink" title="踩坑开始"></a>踩坑开始</h3><p>首先看一下，我<code>npm install</code>所遇到的错误：</p><p><img src="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/electron-vue-1/2.png" alt></p><blockquote><p><a href="https://segmentfault.com/a/1190000008310875" target="_blank" rel="noopener"><strong>原文链接</strong></a></p><p>经分析发现，某些版本下，chromedriver 的 zip 文件 url 的响应是 302 跳转，而在 install.js 里使用的是 Node.js 内置的 http 对象的 get 方法无法处理 302 跳转的情况；而在另外一些情况下，则是因为 googleapis.com 被墙了，此时即使采用科学上网的方法也仍然无法获取文件。</p><p>无论是上述哪种情况，可以使用下面的命令安装：(使用 cnpm 安装亦可)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver</span><br></pre></td></tr></table></figure><p>然后以为一切正常，就<code>npm run dev</code>，结果可想而知，在运行日志中报错了。错误日志忘记截图保存了，大概意思提示就是<code>electron</code>没有正确安装，需要删除<code>node_modules</code>文件夹重新<code>npm install</code>。哦霍~那就再来呗，然并卵。最后想到也可能和安装<code>chromedriver</code>一样的问题，所以就找到了下在的命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install electron --electron_mirror=https://npm.taobao.org/mirrors/electron/</span><br></pre></td></tr></table></figure><p>好的，大功告成，再次<code>npm run dev</code>，哇哇哇…，终于看到界面了。</p><p><img src="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/electron-vue-1/3.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR in Template execution failed: ReferenceError: process is not defined</span><br></pre></td></tr></table></figure><p>emmm…这是什么情况，一开始以为又是什么包没有安装好，一顿瞎操作过后它还是无动于衷。最后是在<code>google</code>上才搜到一个对应的<code>issues</code>：<a href="https://github.com/agalwood/Motrix/issues/267" target="_blank" rel="noopener">https://github.com/agalwood/Motrix/issues/267</a></p><blockquote><p>我今天也遇到，谷歌了很久，终于解决了，技术把node 12.4开发版还原到10.16稳定版 然后删除node_modules 再install就可以了</p></blockquote><p>也是唯一一个比较有效的解决方案，然后就卸载了<code>v12.3.1</code>的版本，重新安装了<code>v10.16.0</code>的稳定版。没有任何意外的再次遇到了<code>node-sass</code>安装问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! code ELIFECYCLE</span><br><span class="line">npm ERR! errno 1</span><br><span class="line">npm ERR! node-sass@4.12.0 postinstall: `node scripts/build.js`</span><br><span class="line">npm ERR! Exit status 1</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! Failed at the node-sass@4.12.0 postinstall script.</span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span><br></pre></td></tr></table></figure><p>这种问题现在解决起来得心应手，依然使用淘宝镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install node-sass –sass-binary-site=http://npm.taobao.org/mirrors/node-sass</span><br></pre></td></tr></table></figure><p>再再次<code>npm run dev</code>，完美，总算是看到了一个完整的界面。如下：</p><p><img src="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/blog/image/electron-vue-1/1.png" alt></p><p>但是，我注意到日志中报错了。emmm…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">┏ Electron -------------------</span><br><span class="line"></span><br><span class="line">  [11000:0615/095124.922:ERROR:CONSOLE(7574)] &quot;Extension server error: Object not found: &lt;top&gt;&quot;, source: chrome-devtools://devtools/bundled/inspector.js (7574)</span><br><span class="line">  </span><br><span class="line">┗ ----------------------------</span><br></pre></td></tr></table></figure><p>这里需要表扬一下<code>google</code>，对于<code>Github</code>上项目的<code>issues</code>的搜集<code>baidu</code>基本上是没有。搜索到一个<code>issues</code>：<a href="https://github.com/SimulatedGREG/electron-vue/issues/389" target="_blank" rel="noopener">https://github.com/SimulatedGREG/electron-vue/issues/389</a></p><blockquote><p>So, to summarize</p></blockquote><blockquote><p><strong>In main/index.dev.js:</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- <span class="built_in">require</span>(<span class="string">'electron-debug'</span>)(&#123; <span class="attr">showDevTools</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">+ <span class="comment">// NB: Don't open dev tools with this, it is causing the error</span></span><br><span class="line">+ <span class="built_in">require</span>(<span class="string">'electron-debug'</span>)();</span><br></pre></td></tr></table></figure><blockquote><p><strong>In main/index.js in the createWindow() function:</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mainWindow.loadURL(winURL);</span><br><span class="line"></span><br><span class="line">+  <span class="comment">// Open dev tools initially when in development mode</span></span><br><span class="line">+  <span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">"development"</span>) &#123;</span><br><span class="line">+    mainWindow.webContents.on(<span class="string">"did-frame-finish-load"</span>, () =&gt; &#123;</span><br><span class="line">+      mainWindow.webContents.once(<span class="string">"devtools-opened"</span>, () =&gt; &#123;</span><br><span class="line">+        mainWindow.focus();</span><br><span class="line">+      &#125;);</span><br><span class="line">+      mainWindow.webContents.openDevTools();</span><br><span class="line">+    &#125;);</span><br><span class="line">+  &#125;</span><br></pre></td></tr></table></figure><p>问题的根本原因也没有去深究了，估计就是一些版本问题。</p><blockquote><p><strong>说明：代码中前面的+与-是github上代码对版本更新的提示，<code>+</code>代表新增代码行，<code>-</code>代表删除代码行。blog中的code块没有对应样式，所以实际代码中不需要添加前面的+与-。</strong></p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>一波N折过后，换来的就是解决问题的思路以及经验，然后技术问题还是得在<code>google</code>搜呀。感叹~<br>上面所说的是遇到问题后找到的解决方法，下面总结一下<code>npm install</code>时的顺序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 安装node-sass</span><br><span class="line">npm install node-sass –sass-binary-site=http://npm.taobao.org/mirrors/node-sass</span><br><span class="line">// 安装chromedriver</span><br><span class="line">npm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver</span><br><span class="line">// 安装electron</span><br><span class="line">npm install electron --electron_mirror=https://npm.taobao.org/mirrors/electron/</span><br><span class="line">// 安装其它包</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>以及各种版本：</p><ul><li><code>nodejs v10.16.0</code></li><li><code>npm v6.9.0</code></li><li><code>windows 10 专业版</code></li></ul><p>另外或许直接使用<code>cnpm</code>就不会有这些头疼的问题了。</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ol><li><a href="https://molunerfinn.com/electron-vue-1/" target="_blank" rel="noopener">Electron-vue开发实战</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
            <tag> vue </tag>
            
            <tag> electron-vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows常用软件集合</title>
      <link href="/posts/aa353b93/"/>
      <url>/posts/aa353b93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>比较好用的一些常用软件，贴一下地址，以免之后换电脑后再到处找。</p></blockquote><p>以下：</p><ul><li>工具类<ul><li><a href="https://pan.baidu.com/s/1rB7kJZOoKLN8uoKAhO1Uvw" target="_blank" rel="noopener">Charles中文版</a>  （抓包软件，提取码: afoa）</li><li><a href="https://www.getpostman.com/" target="_blank" rel="noopener">postman</a> （接口测试）</li><li><a href="https://typora.io/#windows" target="_blank" rel="noopener">Typora</a>（markdown编辑器）</li><li><a href="https://pan.baidu.com/s/1GV3hW7Qk6G-6cL5uKDbe0g" target="_blank" rel="noopener">XMind 8</a>（思维导图，提取码: o9ok）</li><li><a href="https://pan.baidu.com/s/1gbPxbVI6_mf9YIyBJefSLw" target="_blank" rel="noopener">Adobe 全套</a> （提取码: 8e68）</li><li>Axuer （原型设计）</li><li>Visio（流程图绘制）</li><li>Adobe XD（原型设计）</li></ul></li><li>下载类<ul><li><a href="http://pandownload.com/" target="_blank" rel="noopener">PanDownload</a> （第三方百度云盘，可提速下载）</li></ul></li><li>图片类<ul><li><a href="https://zh.snipaste.com/" target="_blank" rel="noopener">snipaste</a> （截图软件）</li><li><a href="https://www.screentogif.com/?l=zh_cn" target="_blank" rel="noopener">ScreenToGif</a> （屏幕，摄像头和白板录像机与集成编辑器，GIF动图抓取）</li><li><a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener">PigGo</a> （图床上传管理工具）</li><li><a href="https://pan.baidu.com/s/1ZfnoUSMOfDB2RqU4apXJ-A" target="_blank" rel="noopener">图片无压缩</a> （ 1M不到的压缩软件，提取码: 1d34）</li></ul></li><li>视频类<ul><li><a href="https://potplayer.daum.net/" target="_blank" rel="noopener">potplayer</a> （强大的播放器）</li><li><a href="http://www.aegisub.org/" target="_blank" rel="noopener">Aegisub</a> (制作字幕）</li><li><a href="https://sourceforge.net/projects/megui/" target="_blank" rel="noopener">Megui</a>(压制视频）</li></ul></li><li>文件搜索<ul><li><a href="https://pan.baidu.com/s/1xAutst0lDResWl4mMt7MXQ" target="_blank" rel="noopener">Listary</a> （提取码: 29xp）</li></ul></li><li>安全软件<ul><li><a href="https://www.huorong.cn/" target="_blank" rel="noopener">火绒安全</a></li></ul></li><li>清理软件<ul><li><a href="https://www.wisecleaner.com/wise-care-365.html" target="_blank" rel="noopener">Wise Care 365</a></li><li><a href="https://www.ccleaner.com/" target="_blank" rel="noopener">CCleaner</a></li></ul></li><li>抢票软件<ul><li><a href="https://www.bypass.cn/" target="_blank" rel="noopener">Bypass</a></li></ul></li><li>PDF查看器<ul><li><a href="https://pan.baidu.com/s/193HivAmvP4dlrlHERg7dMg" target="_blank" rel="noopener">iStylePDF</a> （提取码: f1b0）</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo的相关记录</title>
      <link href="/posts/392e6e8d/"/>
      <url>/posts/392e6e8d/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  最近又打算开始记录一些文章了，所以先从折腾hexo开始咯。</p></blockquote><h3 id="hexo目录详解"><a href="#hexo目录详解" class="headerlink" title="hexo目录详解"></a>hexo目录详解</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>public // 静态页面生成目录</span><br><span class="line"><span class="bullet">- </span>scaffolds //new 文章时的固定布局</span><br><span class="line"><span class="bullet">- </span>source //文章以及page的资源目录</span><br><span class="line"><span class="bullet">- </span>themes //样式主题位置</span><br><span class="line">package.json</span><br><span class="line">_config.yml</span><br><span class="line">.gitignore</span><br></pre></td></tr></table></figure><h3 id="文章配置"><a href="#文章配置" class="headerlink" title="文章配置"></a>文章配置</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 标题</span></span><br><span class="line">title: </span><br><span class="line"><span class="section"># 标签</span></span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  - </span>hexo</span><br><span class="line"><span class="section"># 作者</span></span><br><span class="line">author: gorkys</span><br><span class="line"><span class="section"># 顶置</span></span><br><span class="line">top: false</span><br><span class="line"><span class="section"># 分类</span></span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  - </span>hexo</span><br><span class="line"><span class="section"># 创建时间</span></span><br><span class="line">date: 2019-05-31 15:15:17</span><br><span class="line"><span class="section"># 文章顶部图片</span></span><br><span class="line">top_img: </span><br><span class="line"><span class="section"># 封面与顶部图片</span></span><br><span class="line">cover:</span><br><span class="line"><span class="section"># 评论功能</span></span><br><span class="line">comments: true # or false</span><br></pre></td></tr></table></figure><h3 id="配置文章地址的永久链接"><a href="#配置文章地址的永久链接" class="headerlink" title="配置文章地址的永久链接"></a>配置文章地址的永久链接</h3><p>1.</p><p><a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">官网文档</a></p><blockquote><p>首先打开<code>_config.yml</code>，在里面找到<code>permalink</code>属性进行更改</p></blockquote><p>2.</p><blockquote><p>另外通过<a href="http://jerryc.me/" target="_blank" rel="noopener">@jerryc</a>介绍的一个<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a>插件可以更简短的显示。</p></blockquote><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new *** //新建文章</span><br><span class="line">hexo clean //清除生成文件</span><br><span class="line">hexo generate // 生成 简写 hexo g</span><br><span class="line">hexo server // 开启服务 简写 hexo s</span><br><span class="line">hexo deploy // 同步git 简写 hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重装系统后，Hexo博客如何重新部署恢复</title>
      <link href="/posts/88ec4b59/"/>
      <url>/posts/88ec4b59/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下方法只适用于没有删除 hexo blog 文件夹</p></blockquote><p>因为重装系统后，Hexo 相关依赖插件/软件和在 C 盘的缓存资料都会被删除，以至于 Hexo 的相关命令都无法运行。所有，在重装系统后，都要重新部署 Hexo。但是重新部署并不难，只需要几个步骤就行。<br>因为我的 hexo blog 文件夹不存储于 C 盘，并没有因为重装系统被删掉。所有重新部署很容易。</p><h2 id="安装-git-和-node"><a href="#安装-git-和-node" class="headerlink" title="安装 git 和 node"></a>安装 git 和 node</h2><p>git for windows: <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a><br>Node.js: <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p><h2 id="生成-ssh-密钥"><a href="#生成-ssh-密钥" class="headerlink" title="生成 ssh 密钥"></a>生成 ssh 密钥</h2><p>配置 git 个人信息和生成 ssh 密钥<br>打开 git bash，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"xxxxx"</span></span><br><span class="line">git config --global user.email <span class="string">"xxxxxx@xx.com"</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"xxxxxx@xx.com"</span></span><br></pre></td></tr></table></figure><p>把上面的 xxxx 换成自己的资料，然后一直 Enter 就行。</p><h2 id="设置-Github-的-ssh-密钥"><a href="#设置-Github-的-ssh-密钥" class="headerlink" title="设置 Github 的 ssh 密钥"></a>设置 Github 的 ssh 密钥</h2><p>当上面的运行完成后，会在 <code>C:\Users\主用户</code>里出现<code>.ssh</code>文件夹，里面有 id_rsa 和 id_rsa.pub 两个文件，复制 id_rsa.pub 的内容。</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/blog/Rebuild_hexo_when_reinstall_the_system/1.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/blog/Rebuild_hexo_when_reinstall_the_system/1.png" alt="img"></a></p><p>打开 Github 网页，依次是 <code>右上角Settings - SSH and GPG keys - New SSH key</code> 把复制的内容粘贴到 <code>Key</code>栏，然后保存。<br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/blog/Rebuild_hexo_when_reinstall_the_system/2.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/blog/Rebuild_hexo_when_reinstall_the_system/2.png" alt="img"></a><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/blog/Rebuild_hexo_when_reinstall_the_system/3.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/blog/Rebuild_hexo_when_reinstall_the_system/3.png" alt="img"></a></p><p>PS：如果你有把 blog 同步到 coding 的，记得同样把 id_rsa.pub 的内容复制到 coding 的 ssh 公钥去，具体为<code>右上角个人设置 － SSH公钥 - 新增公钥</code><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/blog/Rebuild_hexo_when_reinstall_the_system/4.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/blog/Rebuild_hexo_when_reinstall_the_system/4.png" alt="img"></a></p><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>git bash 上 输入 <code>npm install hexo-cli -g</code></p><h2 id="删掉原-blog-文件夹部分文件"><a href="#删掉原-blog-文件夹部分文件" class="headerlink" title="删掉原 blog 文件夹部分文件"></a>删掉原 blog 文件夹部分文件</h2><p>打开你原有的 blog 文件夹，只需保留_config.yml，theme/，source/，scaffolds/，package.json，.gitignore 这些项目，删除其他的文件。</p><h2 id="安装依赖文件"><a href="#安装依赖文件" class="headerlink" title="安装依赖文件"></a>安装依赖文件</h2><p>git bash 上 输入 <code>npm install</code></p><h2 id="安装部署插件"><a href="#安装部署插件" class="headerlink" title="安装部署插件"></a>安装部署插件</h2><p>git bash 上 输入 <code>npm install hexo-deployer-git --save</code></p><p>最后 运行 hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 看看是否成功。</p><h2 id="Hexo部署过程中的难点解决："><a href="#Hexo部署过程中的难点解决：" class="headerlink" title="Hexo部署过程中的难点解决："></a>Hexo部署过程中的难点解决：</h2><p><strong>1、如果博客有RSS订阅和站点地图功能</strong>，请在第七步安装下面两个插件，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save  //RSS订阅插件</span><br><span class="line">npm install hexo-generator-sitemap --save //站点地图插件</span><br></pre></td></tr></table></figure><p><strong>2、安装部署过程中，在git bash中使用hexo g或者hexo d等命令，会报错提示： Cannot find module ‘C:\Program Files\Git\node_modules\hexo-cli\bin\hexo’。</strong><br>如图所示：</p><p><img src="http://ww1.sinaimg.cn/large/66101050ly1fd2sjp9y5hj20k105hq3q" alt="img"></p><p><strong>我当时的解决办法：</strong><br>在C盘用户目录下，找到这个文件夹：C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli。<br>然后把node_modules这个文件夹复制到Git安装目录下（C:\Program Files\Git）即可。</p><p><strong>3、怎么用hexo上传一个README.md到github?</strong><br>因为README.md文件一执行<code>hexo d</code>命令之后，README文件就被渲染变为README.html文件。</p><p><strong>解决办法：</strong><br>在Hexo目录下的source根目录下添加一个 README.md；<br>修改Hexo目录下的_config.yml，设置 skip_render: README.md保存退出即可；<br>使用hexo d 命令就不会再渲染 README.md 这个文件了。</p><h2 id="本文章参考"><a href="#本文章参考" class="headerlink" title="本文章参考:"></a>本文章参考:</h2><blockquote><ul><li><a href="https://helloqingfeng.github.io/2017/02/25/hexo-rebuilding/" target="_blank" rel="noopener">https://helloqingfeng.github.io/2017/02/25/hexo-rebuilding/</a></li><li><a href="http://jerryc.me/posts/dda8c81b/#%E5%AE%89%E8%A3%9D%E4%BE%9D%E8%B3%B4%E6%96%87%E4%BB%B6" target="_blank" rel="noopener">http://jerryc.me/posts/dda8c81b/#%E5%AE%89%E8%A3%9D%E4%BE%9D%E8%B3%B4%E6%96%87%E4%BB%B6</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于element-ui 的隐藏组件el-scrolbar</title>
      <link href="/posts/afcee591/"/>
      <url>/posts/afcee591/</url>
      
        <content type="html"><![CDATA[<blockquote><p>虽然在官方文档中没有给出这个组件，但是在源码中是有的。所以我们可以直接使用：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-scrollbar</span>&gt;</span><span class="tag">&lt;/<span class="name">el-scrollbar</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是我们需要微调一下样式，两种情况的演示代码如下：</p><ul><li><strong>已知内容高度</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">'height:800px'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-scrollbar</span> <span class="attr">class</span>=<span class="string">'page-component__scroll'</span>&gt;</span><span class="tag">&lt;/<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.page-component__scroll</span>&#123;</span></span><br><span class="line">height: 100%;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.page-component__scroll</span> <span class="selector-class">.el-scrollbar__wrap</span> &#123;</span></span><br><span class="line">overflow-x: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li><strong>高度由内容撑开</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">'height:100%'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-scrollbar</span> <span class="attr">class</span>=<span class="string">'page-component__scroll'</span>&gt;</span><span class="tag">&lt;/<span class="name">el-scrollbar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">html,body&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%</span></span><br><span class="line"><span class="css"><span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>; <span class="comment">/*有效防止在页面进行手动刷新时显示内置滚动条*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.page-component__scroll</span>&#123;</span></span><br><span class="line">height: 100%;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.page-component__scroll</span> <span class="selector-class">.el-scrollbar__wrap</span> &#123;</span></span><br><span class="line">overflow-x: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Element-ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue项目中,当图片无法显示时则显示默认图片</title>
      <link href="/posts/ac0a8c83/"/>
      <url>/posts/ac0a8c83/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>项目中做了一个实时截图(轮循)，由前端发请求给服务器，然后服务器再通知终端截图，最后服务器将截图地址返回给前端。<br>这中间，终端截图上传会有一个时差问题，所以前端获取到的第一个截图地址是404,页面会在获取到正确图片的这段时间内显示空白，为了解决这一问题,了解到了<code>onerror</code>事件。下面我们就看看怎么在vue中使用它。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"imgSrc"</span> <span class="attr">:onerror</span>=<span class="string">"imgLoading"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      imgLoading: <span class="string">'this.src="'</span> + <span class="built_in">require</span>(<span class="string">'@/assets/loading.gif'</span>) + <span class="string">'"'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p>在v-bind标签中，单引号’ ‘引用的内容作为字符串存在；双引号” “引用的内容作为变量/表达式存在，可以进行运算。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue+element-ui实现显示隐藏密码</title>
      <link href="/posts/b187e3b3/"/>
      <url>/posts/b187e3b3/</url>
      
        <content type="html"><![CDATA[<h3 id="最终实现效果"><a href="#最终实现效果" class="headerlink" title="最终实现效果"></a>最终实现效果</h3><p><img src="https://upload-images.jianshu.io/upload_images/12792466-7d5d360f8b27fb3d.gif?imageMogr2/auto-orient/strip" alt="显示隐藏密码.gif"></p><h3 id="实现思路（第一种方法）"><a href="#实现思路（第一种方法）" class="headerlink" title="实现思路（第一种方法）"></a>实现思路（第一种方法）</h3><p>因为输入框本身没有切换明文与暗文的功能，所以我们要实现切换功能就需要两个输入框，通过JS来控制样式<code>dispaly:none</code>来指定谁被渲染出来。在VUE中来实现的话，因为数据绑定，所以会更简单一些。通过点击切换图标触发事件，然后使用<code>v-if</code>与<code>v-else</code>进行条件渲染即可。</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'test'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">"formPassword"</span> <span class="attr">labelWidth</span>=<span class="string">"80px"</span> <span class="attr">label-position</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"旧密码"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">v-model</span>=<span class="string">"formPassword.oldPassword"</span> <span class="attr">placeholder</span>=<span class="string">"请输入旧密码"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">v-if</span>=<span class="string">"visible"</span> <span class="attr">label</span>=<span class="string">"新密码"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">v-model</span>=<span class="string">"formPassword.newPassword"</span> <span class="attr">placeholder</span>=<span class="string">"请输入新密码"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">slot</span>=<span class="string">"suffix"</span> <span class="attr">title</span>=<span class="string">"显示密码"</span> @<span class="attr">click</span>=<span class="string">"changePass('show')"</span> <span class="attr">style</span>=<span class="string">"cursor:pointer;"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">class</span>=<span class="string">"el-input__icon iconfont icon-xianshi"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">v-else</span> <span class="attr">label</span>=<span class="string">"新密码"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"formPassword.newPassword"</span> <span class="attr">placeholder</span>=<span class="string">"请输入新密码"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">slot</span>=<span class="string">"suffix"</span> <span class="attr">title</span>=<span class="string">"隐藏密码"</span> @<span class="attr">click</span>=<span class="string">"changePass('hide')"</span> <span class="attr">style</span>=<span class="string">"cursor:pointer;"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">class</span>=<span class="string">"el-input__icon iconfont icon-yincang"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    data() &#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line">        formPassword: &#123;</span><br><span class="line"><span class="javascript">          oldPassword: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">          newPassword: <span class="string">''</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        visible: <span class="literal">true</span>      </span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      changePass(value) &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.visible = !(value === <span class="string">'show'</span>);</span></span><br><span class="line"><span class="javascript">      &#125;    <span class="comment">//判断渲染，true:暗文显示，false:明文显示</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现思路（第二种方法）"><a href="#实现思路（第二种方法）" class="headerlink" title="实现思路（第二种方法）"></a>实现思路（第二种方法）</h3><p><code>input</code>在什么情况下会显示暗文呢？当我们在属性<code>type</code>里面设置了<code>password</code>。<br>那么什么时候是明文呢？很显然是<code>type</code>为<code>text</code>或者为空时。<br>到这里问题就很简单了，我们只需要为<code>type</code>绑定一个值进行判断改变。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Element-ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>antV G6流程图在Vue中的使用</title>
      <link href="/posts/9379e170/"/>
      <url>/posts/9379e170/</url>
      
        <content type="html"><![CDATA[<h3 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h3><ul><li><p>2.x版本</p><ul><li><a href="https://www.yuque.com/antv/g6-editor/quick-start" target="_blank" rel="noopener">G6-Editor 文档</a>2.x版本,可以通过<code>npm     install</code>直接安装使用了</li></ul></li><li><p>相关资源下载</p><ul><li><a href="https://gw.alipayobjects.com/os/antv/assets/g6/1.2.8/g6.min.js" target="_blank" rel="noopener">antV G6( v1.2.8)</a> </li><li><a href="https://cdn.jsdelivr.net/gh/gorkys/CDN-Blog@master/fonts/anv_g6.rar" target="_blank" rel="noopener">字体图标</a></li></ul></li></ul><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近我司项目中需要加入流程图制作功能，于是乎百度各种找可视化绘制拓扑图的轮子，大部分都是国外的，看文档太吃力，不过好在最终让我发现了AntV G6流程图图表库，最新版为2.0，不过编辑器在2.0版本还没有进行开源，所以只能退而求其次，使用了1.2.8版本。希望2.0版本的编辑器尽早开源，在交互方面1.2.8版本还是差了一些。</p><h3 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h3><ul><li><a href="https://cn.vuejs.org/" target="_blank" rel="noopener">Vue</a> <code>v2.*</code></li><li><a href="http://element.eleme.io/#/zh-CN" target="_blank" rel="noopener">Element-ui</a> <code>v2.4.5</code></li><li><a href="http://antvis.github.io/g6/api/index.html" target="_blank" rel="noopener">antV G6</a> <code>v1.2.8</code></li><li><a href>Sass</a></li></ul><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://upload-images.jianshu.io/upload_images/12792466-2356374c43665dd8.gif?imageMogr2/auto-orient/strip" alt="流程图.gif"></p><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><blockquote><p>另外需要引入<code>Element-UI</code></p></blockquote><p>在<code>index.html</code>中进行了全局引用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script src=<span class="string">"./static/plugin/g6.min.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h3><p>仿照2.0版本的编辑器将G6作为了一个组件使用，代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"flowChart"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"operating"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"addCircle"</span> <span class="attr">title</span>=<span class="string">"起始节点"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-circle-oeps"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"addRect"</span> <span class="attr">title</span>=<span class="string">"常规节点"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-square-oeps"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"addRhombus"</span> <span class="attr">title</span>=<span class="string">"条件节点"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-square-ling"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"addLine"</span> <span class="attr">title</span>=<span class="string">"直线"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-zhixian"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"addSmooth"</span> <span class="attr">title</span>=<span class="string">"曲线"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-quxian"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"addArrowLine"</span> <span class="attr">title</span>=<span class="string">"箭头直线"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-jiantouzhixian"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"addArrowSmooth"</span> <span class="attr">title</span>=<span class="string">"箭头曲线"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-jiantouquxian"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"changeMode('edit')"</span> <span class="attr">title</span>=<span class="string">"选择模式"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-chose"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"changeMode('drag')"</span> <span class="attr">title</span>=<span class="string">"拖拽模式"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-move"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"del"</span> <span class="attr">style</span>=<span class="string">"margin-top: 5px;"</span> <span class="attr">title</span>=<span class="string">"删除"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-delete"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"save"</span> <span class="attr">title</span>=<span class="string">"保存"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-baocun"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">v-model</span>=<span class="string">"workflowName"</span> <span class="attr">placeholder</span>=<span class="string">"请输入流图名称..."</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;infoTitle&#125;&#125;属性<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-if</span>=<span class="string">"isBlank === true"</span> <span class="attr">v-model</span>=<span class="string">"checked"</span>&gt;</span>网格对齐<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">v-else</span> <span class="attr">label-position</span>=<span class="string">"left"</span> <span class="attr">label-width</span>=<span class="string">"60px"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">v-if</span>=<span class="string">"isNode !== true"</span> <span class="attr">label</span>=<span class="string">"动作"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">"action"</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">filterable</span> <span class="attr">placeholder</span>=<span class="string">"绑定动作"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-option</span></span></span><br><span class="line"><span class="tag">                <span class="attr">v-for</span>=<span class="string">"item in actionList"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:key</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:label</span>=<span class="string">"item.label"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:value</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span>   <span class="comment">&lt;!-- 线--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">v-if</span>=<span class="string">"isNode === true"</span> <span class="attr">ref</span>=<span class="string">"inputFocus"</span> <span class="attr">label</span>=<span class="string">"名称"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">v-if</span>=<span class="string">"isNode === true"</span> <span class="attr">label</span>=<span class="string">"功能"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">"func"</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">filterable</span> <span class="attr">placeholder</span>=<span class="string">"绑定功能"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-option</span></span></span><br><span class="line"><span class="tag">                <span class="attr">v-for</span>=<span class="string">"item in funcList"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:key</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:label</span>=<span class="string">"item.label"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:value</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">v-if</span>=<span class="string">"isNode === true"</span> <span class="attr">label</span>=<span class="string">"账号"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">"account"</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">filterable</span> <span class="attr">multiple</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">collapse-tags</span> <span class="attr">placeholder</span>=<span class="string">"绑定账号"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-option</span></span></span><br><span class="line"><span class="tag">                <span class="attr">v-for</span>=<span class="string">"item in accountList"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:key</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:label</span>=<span class="string">"item.label"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:value</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">v-if</span>=<span class="string">"isNode === true"</span> <span class="attr">label</span>=<span class="string">"流图"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">"workflow"</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">filterable</span> <span class="attr">clearable</span> <span class="attr">placeholder</span>=<span class="string">"绑定流图"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-option</span></span></span><br><span class="line"><span class="tag">                <span class="attr">v-for</span>=<span class="string">"item in workflowList"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:key</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:label</span>=<span class="string">"item.label"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:value</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">v-if</span>=<span class="string">"isNode === true"</span> <span class="attr">label</span>=<span class="string">"类型"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">"nodeType"</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">filterable</span> <span class="attr">placeholder</span>=<span class="string">"请选择类型"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-option</span></span></span><br><span class="line"><span class="tag">                <span class="attr">v-for</span>=<span class="string">"item in nodeTypeList"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:key</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:label</span>=<span class="string">"item.label"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:value</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"颜色"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-color-picker</span> <span class="attr">v-model</span>=<span class="string">"color"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-color-picker</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    name: <span class="string">"index"</span>,</span><br><span class="line">    components: &#123;&#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">      <span class="keyword">this</span>.initG6();</span><br><span class="line">    &#125;,</span><br><span class="line">    props: &#123;</span><br><span class="line">      actionList: &#123;</span><br><span class="line">        type: <span class="built_in">Array</span>, <span class="attr">default</span>: []</span><br><span class="line">      &#125;,</span><br><span class="line">      funcList: &#123;</span><br><span class="line">        type: <span class="built_in">Array</span>, <span class="attr">default</span>: []</span><br><span class="line">      &#125;,</span><br><span class="line">      accountList: &#123;</span><br><span class="line">        type: <span class="built_in">Array</span>, <span class="attr">default</span>: []</span><br><span class="line">      &#125;,</span><br><span class="line">      workflowList: &#123;</span><br><span class="line">        type: <span class="built_in">Array</span>, <span class="attr">default</span>: []</span><br><span class="line">      &#125;,</span><br><span class="line">      nodeTypeList: &#123;</span><br><span class="line">        type: <span class="built_in">Array</span>, <span class="attr">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            &#123;<span class="attr">id</span>: <span class="number">0</span>, <span class="attr">label</span>: <span class="string">'普通节点'</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">label</span>: <span class="string">'入口节点'</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">label</span>: <span class="string">'出口节点'</span>&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        action: <span class="string">''</span>,</span><br><span class="line">        name: <span class="string">''</span>,</span><br><span class="line">        func: <span class="string">''</span>,</span><br><span class="line">        account: <span class="string">''</span>,</span><br><span class="line">        workflow: <span class="string">''</span>,</span><br><span class="line">        nodeType: <span class="number">0</span>,</span><br><span class="line">        color: <span class="string">''</span>,</span><br><span class="line"></span><br><span class="line">        net: <span class="string">''</span>,</span><br><span class="line">        Util: <span class="string">''</span>,</span><br><span class="line">        workflowName: <span class="string">''</span>,</span><br><span class="line">        activation: <span class="string">''</span>, <span class="comment">//当前激活的节点</span></span><br><span class="line">        isNode: <span class="literal">false</span>, <span class="comment">//当前是节点</span></span><br><span class="line">        isBlank: <span class="literal">true</span>,   <span class="comment">//当前是空白区</span></span><br><span class="line">        checked: <span class="literal">true</span>,  <span class="comment">//网格对齐</span></span><br><span class="line">        infoTitle: <span class="string">'画布'</span>,<span class="comment">//属性标题</span></span><br><span class="line">        oldColor: <span class="string">''</span>,    <span class="comment">//获取节点本身颜色</span></span><br><span class="line">        type: <span class="string">''</span>,        <span class="comment">//有值为编辑状态</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      initG6() &#123;</span><br><span class="line">        <span class="keyword">let</span> self = <span class="keyword">this</span>;</span><br><span class="line">        self.Util = G6.Util;</span><br><span class="line">        <span class="keyword">let</span> grid;</span><br><span class="line">        <span class="keyword">if</span> (self.checked) &#123;</span><br><span class="line">          grid = &#123;</span><br><span class="line">            forceAlign: <span class="literal">true</span>, <span class="comment">// 是否支持网格对齐</span></span><br><span class="line">            cell: <span class="number">25</span>,         <span class="comment">// 网格大小</span></span><br><span class="line">          &#125;;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          grid = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        self.net = <span class="keyword">new</span> G6.Net(&#123;</span><br><span class="line">          id: <span class="string">'flowChart'</span>,      <span class="comment">// 容器ID</span></span><br><span class="line">          mode: <span class="string">'edit'</span>,</span><br><span class="line">          grid: grid,</span><br><span class="line">          <span class="comment">/*width: 500,    // 画布宽*/</span></span><br><span class="line">          height: <span class="number">800</span>    <span class="comment">// 画布高</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/*self.net.tooltip(&#123;</span></span><br><span class="line"><span class="comment">          title: '信息', // @type &#123;String&#125; 标题</span></span><br><span class="line"><span class="comment">          split: ':',  // @type &#123;String&#125; 分割符号</span></span><br><span class="line"><span class="comment">          dx: 0,       // @type &#123;Number&#125; 水平偏移</span></span><br><span class="line"><span class="comment">          dy: 0        // @type &#123;Number&#125; 竖直偏移</span></span><br><span class="line"><span class="comment">        &#125;);*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *点击空白处</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        self.net.on(<span class="string">'click'</span>, (ev) =&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (!self.Util.isNull(ev.item)) &#123;</span><br><span class="line">            self.isBlank = <span class="literal">false</span></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            self.isBlank = <span class="literal">true</span>;</span><br><span class="line">            self.infoTitle = <span class="string">'画布'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *点击节点</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        self.net.on(<span class="string">'itemclick'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">          self.isNode = self.Util.isNode(ev.item);   <span class="comment">//是否为Node</span></span><br><span class="line">          self.activation = ev.item;</span><br><span class="line">          <span class="keyword">if</span> (self.isNode) &#123;</span><br><span class="line">            <span class="comment">/* 激活节点后节点名称input聚焦*/</span></span><br><span class="line">            self.$nextTick(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">              self.$refs.inputFocus.$el.querySelector(<span class="string">'input'</span>).focus();</span><br><span class="line">            &#125;);</span><br><span class="line">            self.infoTitle = <span class="string">'节点'</span>;</span><br><span class="line">            self.name = ev.item.get(<span class="string">'model'</span>).label;</span><br><span class="line">            self.func = ev.item.get(<span class="string">'model'</span>).func;</span><br><span class="line">            self.account = ev.item.get(<span class="string">'model'</span>).account || [];</span><br><span class="line">            self.workflow = ev.item.get(<span class="string">'model'</span>).workflow;</span><br><span class="line">            self.nodeType = ev.item.get(<span class="string">'model'</span>).nodeType;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            self.infoTitle = <span class="string">'边'</span>;</span><br><span class="line">            self.action = ev.item.get(<span class="string">'model'</span>).action;</span><br><span class="line">          &#125;</span><br><span class="line">          self.color = self.oldColor;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 鼠标移入移出事件改变颜色</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        self.net.on(<span class="string">'itemmouseenter'</span>, ev =&gt; &#123;</span><br><span class="line">          <span class="keyword">const</span> item = ev.item;</span><br><span class="line">          self.oldColor = item.get(<span class="string">'model'</span>).color;     <span class="comment">//获取节点颜色</span></span><br><span class="line">          self.net.update(item, &#123;</span><br><span class="line">            color: <span class="string">'#108EE9'</span>,</span><br><span class="line">          &#125;);</span><br><span class="line">          self.net.refresh();</span><br><span class="line">        &#125;);</span><br><span class="line">        self.net.on(<span class="string">'itemmouseleave'</span>, ev =&gt; &#123;</span><br><span class="line">          <span class="keyword">const</span> item = ev.item;</span><br><span class="line">          self.net.update(item, &#123;</span><br><span class="line">            color: self.oldColor</span><br><span class="line">          &#125;);</span><br><span class="line">          self.net.refresh();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 提示信息</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">/* self.net.node().tooltip(['label', 'func', 'role', 'color']);</span></span><br><span class="line"><span class="comment">         self.net.edge().tooltip(['label', 'color']);*/</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 渲染</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">/*self.net.source(self.nodes, self.edges);*/</span>  <span class="comment">//加载资源数据</span></span><br><span class="line">        self.net.render();</span><br><span class="line">      &#125;,</span><br><span class="line">      addCircle() &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.beginAdd(<span class="string">'node'</span>, &#123;</span><br><span class="line">          shape: <span class="string">'circle'</span>,</span><br><span class="line">          nodeType: <span class="number">0</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,<span class="comment">//添加起始节点</span></span><br><span class="line">      addRect() &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.beginAdd(<span class="string">'node'</span>, &#123;</span><br><span class="line">          shape: <span class="string">'rect'</span>,</span><br><span class="line">          nodeType: <span class="number">0</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,<span class="comment">//添加常规节点</span></span><br><span class="line">      addRhombus() &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.beginAdd(<span class="string">'node'</span>, &#123;</span><br><span class="line">          shape: <span class="string">'rhombus'</span>,</span><br><span class="line">          nodeType: <span class="number">0</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;, <span class="comment">//添加条件节点</span></span><br><span class="line">      addLine() &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.beginAdd(<span class="string">'edge'</span>, &#123;</span><br><span class="line">          shape: <span class="string">'line'</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;, <span class="comment">//添加直线</span></span><br><span class="line">      addSmooth() &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.beginAdd(<span class="string">'edge'</span>, &#123;</span><br><span class="line">          shape: <span class="string">'smooth'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,  <span class="comment">//添加曲线</span></span><br><span class="line">      addArrowSmooth() &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.beginAdd(<span class="string">'edge'</span>, &#123;</span><br><span class="line">          shape: <span class="string">'smoothArrow'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;, <span class="comment">//添加箭头曲线</span></span><br><span class="line">      addArrowLine() &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.beginAdd(<span class="string">'edge'</span>, &#123;</span><br><span class="line">          shape: <span class="string">'arrow'</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;, <span class="comment">//添加箭头直线</span></span><br><span class="line">      addPolyLine() &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.beginAdd(<span class="string">'edge'</span>, &#123;</span><br><span class="line">          shape: <span class="string">'polyLineFlow'</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;, <span class="comment">//添加折线</span></span><br><span class="line">      changeMode(mode) &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.changeMode(mode)</span><br><span class="line">      &#125;, <span class="comment">//拖拽与编辑模式的切换</span></span><br><span class="line">      del() &#123;</span><br><span class="line">        <span class="keyword">this</span>.net.del()</span><br><span class="line">      &#125;,<span class="comment">//删除</span></span><br><span class="line">      save() &#123;</span><br><span class="line">        <span class="comment">/* 验证流图名称*/</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.workflowName !== <span class="string">''</span>) &#123;</span><br><span class="line">          <span class="keyword">let</span> data = <span class="keyword">this</span>.net.save();</span><br><span class="line">          <span class="keyword">if</span> (data.source.nodes.length === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;<span class="attr">type</span>: <span class="string">'error'</span>, <span class="attr">message</span>: <span class="string">'流图内容不能为空'</span>&#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.source.nodes.length - data.source.edges.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;<span class="attr">type</span>: <span class="string">'error'</span>, <span class="attr">message</span>: <span class="string">'流图中连线异常'</span>&#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">/* 验证节点名称*/</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> data.source.nodes) &#123;</span><br><span class="line">            <span class="keyword">if</span> (item.label === <span class="string">''</span> || item.label === <span class="literal">null</span> || item.label === <span class="literal">undefined</span>) &#123;</span><br><span class="line">              <span class="keyword">this</span>.$message(&#123;<span class="attr">type</span>: <span class="string">'error'</span>, <span class="attr">message</span>: <span class="string">'节点名称不能为空'</span>&#125;);</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          data.source[<span class="string">'name'</span>] = <span class="keyword">this</span>.workflowName;</span><br><span class="line">          <span class="comment">/*let json = JSON.stringify(data, null, 2);*/</span></span><br><span class="line">          <span class="keyword">this</span>.$emit(<span class="string">'saveData'</span>, data.source, <span class="keyword">this</span>.type);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.$message(&#123;<span class="attr">type</span>: <span class="string">'error'</span>, <span class="attr">message</span>: <span class="string">'流图名称不能为空'</span>&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*console.log(saveData, json);*/</span></span><br><span class="line">      &#125;,<span class="comment">//保存</span></span><br><span class="line">      update() &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.activation.get(<span class="string">'type'</span>) === <span class="string">'node'</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.net.update(<span class="keyword">this</span>.activation, &#123;</span><br><span class="line">            label: <span class="keyword">this</span>.name,</span><br><span class="line">            func: <span class="keyword">this</span>.func,</span><br><span class="line">            account: <span class="keyword">this</span>.account,</span><br><span class="line">            workflow: <span class="keyword">this</span>.workflow,</span><br><span class="line">            nodeType: <span class="keyword">this</span>.nodeType,</span><br><span class="line">            color: <span class="keyword">this</span>.color</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">/* 根据ID取出label*/</span></span><br><span class="line">          <span class="keyword">let</span> label = <span class="keyword">this</span>.actionList.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (item.id === <span class="keyword">this</span>.action) &#123;</span><br><span class="line">              <span class="keyword">return</span> item.label</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;).join(<span class="string">''</span>);</span><br><span class="line">          <span class="keyword">this</span>.net.update(<span class="keyword">this</span>.activation, &#123;</span><br><span class="line">            label: label,</span><br><span class="line">            color: <span class="keyword">this</span>.color,</span><br><span class="line">            action: <span class="keyword">this</span>.action</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,  <span class="comment">//更新节点</span></span><br><span class="line">      clearView() &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">this</span>.workflowName = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">this</span>.net.changeData()</span><br><span class="line">      &#125;,   <span class="comment">//清空视图</span></span><br><span class="line">      source(nodes, edges, name, type) &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">this</span>.workflowName = name;</span><br><span class="line">        <span class="keyword">this</span>.net.changeData(nodes, edges)</span><br><span class="line">      &#125;,  <span class="comment">//更新数据</span></span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 监听输入框</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      action: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.update()</span><br><span class="line">      &#125;,</span><br><span class="line">      name: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.update()</span><br><span class="line">      &#125;,</span><br><span class="line">      func: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.update()</span><br><span class="line">      &#125;,</span><br><span class="line">      account: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.update()</span><br><span class="line">      &#125;,</span><br><span class="line">      workflow: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.update()</span><br><span class="line">      &#125;,</span><br><span class="line">      nodeType: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.update()</span><br><span class="line">      &#125;,</span><br><span class="line">      color: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.update()</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 网格切换</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      checked: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> _saveData = <span class="keyword">this</span>.net.save();</span><br><span class="line">        <span class="keyword">this</span>.net.destroy();  <span class="comment">//销毁画布</span></span><br><span class="line">        <span class="keyword">this</span>.initG6();</span><br><span class="line">        <span class="keyword">this</span>.net.read(_saveData);</span><br><span class="line">        <span class="keyword">this</span>.net.render()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;style rel="stylesheet/scss" lang="scss" scoped&gt;</span><br><span class="line">  <span class="selector-id">#flowChart</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ebeef5</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.operating</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">#0a0a0a2e</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.info</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">#0a0a0a2e</span>;</span><br><span class="line">    .title &#123;</span><br><span class="line">      <span class="selector-tag">height</span>: 40<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">padding-left</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">border-top</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#DCE3E8</span>;</span><br><span class="line">      <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#DCE3E8</span>;</span><br><span class="line">      <span class="selector-tag">border-left</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#DCE3E8</span>;</span><br><span class="line">      <span class="selector-tag">background</span>: <span class="selector-tag">rgb</span>(235, 238, 242);</span><br><span class="line">      <span class="selector-tag">line-height</span>: 40<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">span</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.content</span> &#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(247, 249, 251, 0.45);</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#E6E9ED</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.btn-group</span> &#123;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#efefef</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">14px</span>;</span><br><span class="line">    &amp;:last-of-type &#123;</span><br><span class="line">      <span class="selector-tag">border-right</span>: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.btn</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: inline-block;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line">      <span class="attribute">cursor</span>: pointer;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(233, 233, 233, 0);</span><br><span class="line">      i &#123;</span><br><span class="line">        <span class="selector-tag">font-size</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#E9E9E9</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#767A85</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#FAFAFE</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.el-form-item</span> &#123;</span><br><span class="line">      <span class="attribute">margin-bottom</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="流图属性"><a href="#流图属性" class="headerlink" title="流图属性"></a>流图属性</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>actionList</td><td>动作数据</td><td>Array</td><td>——</td><td>[]</td></tr><tr><td>funcList</td><td>功能数据</td><td>Array</td><td>——</td><td>[]</td></tr><tr><td>accountList</td><td>账号数据</td><td>Array</td><td>——</td><td>[]</td></tr><tr><td>workflowList</td><td>流图数据</td><td>Array</td><td>——</td><td>[]</td></tr><tr><td>nodeTypeList</td><td>节点类型数据</td><td>Array</td><td>——</td><td><code>[{id: 0, label: &#39;普通节点&#39;},{id: 1, label: &#39;入口节点&#39;},{id: 2, label: &#39;出口节点&#39;}]</code></td></tr></tbody></table><blockquote><p>所有属性接收的数据格式需要与<code>nodeTypeList</code>的默认值相同</p></blockquote><h3 id="流图事件"><a href="#流图事件" class="headerlink" title="流图事件"></a>流图事件</h3><table><thead><tr><th>事件名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>saveData</td><td>当用户手动点击保存触发事件</td><td>source,type</td></tr></tbody></table><blockquote><p>参数<code>type</code>可为空，在此项目中主要用来区分<code>新建</code>与<code>编辑</code></p></blockquote><h3 id="流图方法"><a href="#流图方法" class="headerlink" title="流图方法"></a>流图方法</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>clearView</td><td>清空当前视图</td><td>——</td></tr><tr><td>source</td><td>渲染数据</td><td>nodes, edges, name, type</td></tr></tbody></table><blockquote><p>参数<code>type</code>与事件中相同，参数<code>name</code>的作用是用来取流图名</p></blockquote><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://www.jianshu.com/p/e28c70a3605c" target="_blank" rel="noopener">使用 G6关系图类库 开发流程图工具</a></p><p><a href="http://antvis.github.io/g6/api/index.html" target="_blank" rel="noopener">旧版本G6 1.x API 文档</a></p><p><a href="https://antv.alipay.com/zh-cn/g6/1.x/api/graph.html" target="_blank" rel="noopener">新版本G6 2.x API 文档</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-draggable-resizable可拖拽缩放的Vue组件</title>
      <link href="/posts/1e6197d3/"/>
      <url>/posts/1e6197d3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Vue 用于可调整大小和可拖动元素的组件并支持组件之间的冲突检测与组件对齐</p></blockquote><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>17年就应用此组件到了项目中，当时正式版的功能不能满足项目需求，还拉取了<code>dev</code>分支的测试版进行了简单的更改。(项目中主要功能之一需要用到此组件)<br>今年因为需求变更，项目重构(手动泪奔)，然后去看了看<code>github</code>,该组件的正式版本更新到了<code>1.7.x</code>，于是把正式版拉下来根据自己的需求进行了修改并发布新版到npm上。</p></blockquote><h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><ul><li>没有依赖</li><li>可拖动，可调整大小或者两者都行</li><li>拥有用于调整大小的控制点</li><li>限制组件调整大小和移动超出父元素</li><li>自定义网格移动</li><li>将拖动限制为垂直或水平移动</li></ul><hr><p><strong>新增特征</strong></p><ul><li>组件之间的冲突检测（不允许组件之间重叠）</li><li>组件与组件之间进行对齐（类似于吸附效果）<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3>原组件地址：<a href="https://github.com/mauricius/vue-draggable-resizable" target="_blank" rel="noopener">vue-draggable-resizable</a><br>新组件地址：<a href="https://github.com/gorkys/vue-draggable-resizable" target="_blank" rel="noopener">vue-draggable-resizable</a><h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save vue-draggable-resizable-gorkys</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://github.com/gorkys/vue-draggable-resizable" target="_blank" rel="noopener">更多API请在项目说明文档中查看</a></p><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><p><a href="https://mauricius.github.io/vue-draggable-resizable/" target="_blank" rel="noopener">Demo</a></p><h2 id="修改过程记录"><a href="#修改过程记录" class="headerlink" title="修改过程记录"></a>修改过程记录</h2><h3 id="提出建议"><a href="#提出建议" class="headerlink" title="提出建议"></a>提出建议</h3><p><img src="https://upload-images.jianshu.io/upload_images/12792466-74e8054096e093a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="github"></p><blockquote><p>在原组件的<code>Issues</code>中提出了建议，作者表示不打算让此组件进行跨越组件之外的操作。<br>好吧，既然作者不打算进行这方面的支持，那只好自己动手了。</p></blockquote><h3 id="Clone项目"><a href="#Clone项目" class="headerlink" title="Clone项目"></a>Clone项目</h3><p><code>Fork</code>项目到自己的仓库，然后<code>Clone</code>项目到本地进行修改。</p><h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><p>1.组件之间的冲突检测</p><blockquote><p>两个组件不允许重叠，如果重叠，将回到移动或缩放前位置</p></blockquote><p>2.组件与组件之间进行对齐（<a href="http://www.runoob.com/try/try.php?filename=jqueryui-example-draggable-snap-to" target="_blank" rel="noopener">参照Jquery UI的<code>draggable</code></a>）</p><blockquote><p>用户移动一个组件到另一个组件边缘的时候，进行对齐操作。类似于吸附效果</p></blockquote><h3 id="代码修改"><a href="#代码修改" class="headerlink" title="代码修改"></a>代码修改</h3><h4 id="1-组件之间的冲突检测"><a href="#1-组件之间的冲突检测" class="headerlink" title="1.组件之间的冲突检测"></a>1.组件之间的冲突检测</h4><p>首先是组件之间的冲突检测，组件与组件的边界检测需要一个<code>标记</code>进行判断。</p><blockquote><p>先在<code>props</code>中加入一个<code>isConflictCheck</code>，让使用者自己选择是否使用此功能。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">props:&#123;</span><br><span class="line">    /* 定义组件是否开启冲突检测 */</span><br><span class="line">    isConflictCheck: &#123;</span><br><span class="line">      type: Boolean, default: false</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>当我们拿到<code>isConflictCheck</code>后，在<code>setConflictCheck</code>方法中给组件的<code>Dom</code>设置一个<code>data-*</code>的属性。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">setConflictCheck: function () &#123;</span><br><span class="line">   if (this.isConflictCheck) &#123;</span><br><span class="line">     this.$el.setAttribute(&apos;data-is-check&apos;, &apos;true&apos;)</span><br><span class="line">   &#125; else &#123;</span><br><span class="line">     this.$el.setAttribute(&apos;data-is-check&apos;, &apos;false&apos;)</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>然后就是如何去检测组件之间的冲突，代码如下，此代码是在测试版本中使用的，看到这些判断都可怕，为了头发，就没有去优化了(反正能使用)。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">conflictCheck: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.isConflictCheck) &#123;</span><br><span class="line">        <span class="keyword">let</span> p = <span class="keyword">this</span>.$el.parentNode.childNodes <span class="comment">// 获取当前父节点下所有子节点</span></span><br><span class="line">        <span class="keyword">if</span> (p.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; p.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p[i] !== <span class="keyword">this</span>.$el &amp;&amp; p[i].className !== <span class="literal">undefined</span> &amp;&amp; p[i].getAttribute(<span class="string">'data-is-check'</span>) !== <span class="string">'false'</span>) &#123;</span><br><span class="line">              <span class="keyword">let</span> tw = p[i].offsetWidth</span><br><span class="line">              <span class="keyword">let</span> th = p[i].offsetHeight</span><br><span class="line">              <span class="keyword">let</span> tl = p[i].offsetLeft</span><br><span class="line">              <span class="keyword">let</span> tt = p[i].offsetTop</span><br><span class="line">              <span class="comment">// 如果冲突，就将回退到移动前的位置</span></span><br><span class="line">              <span class="keyword">if</span> (<span class="keyword">this</span>.top &gt;= tt &amp;&amp; <span class="keyword">this</span>.left &gt;= tl &amp;&amp; tt + th &gt; <span class="keyword">this</span>.top &amp;&amp; tl + tw &gt; <span class="keyword">this</span>.left ||</span><br><span class="line">                <span class="keyword">this</span>.top &lt;= tt &amp;&amp; <span class="keyword">this</span>.left &lt; tl &amp;&amp; <span class="keyword">this</span>.top + <span class="keyword">this</span>.height &gt; tt &amp;&amp; <span class="keyword">this</span>.left + <span class="keyword">this</span>.width &gt; tl) &#123; <span class="comment">/* 左上角与右下角重叠 */</span></span><br><span class="line">                <span class="keyword">this</span>.top = <span class="keyword">this</span>.restoreY</span><br><span class="line">                <span class="keyword">this</span>.left = <span class="keyword">this</span>.restoreX</span><br><span class="line">                <span class="keyword">this</span>.width = <span class="keyword">this</span>.restoreW</span><br><span class="line">                <span class="keyword">this</span>.height = <span class="keyword">this</span>.restoreH</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.left &lt;= tl &amp;&amp; <span class="keyword">this</span>.top &gt;= tt &amp;&amp; <span class="keyword">this</span>.left + <span class="keyword">this</span>.width &gt; tl &amp;&amp; <span class="keyword">this</span>.top &lt; tt + th ||</span><br><span class="line">                <span class="keyword">this</span>.top &lt; tt &amp;&amp; <span class="keyword">this</span>.left &gt; tl &amp;&amp; <span class="keyword">this</span>.top + <span class="keyword">this</span>.height &gt; tt &amp;&amp; <span class="keyword">this</span>.left &lt; tl + tw) &#123; <span class="comment">/* 右上角与左下角重叠 */</span></span><br><span class="line">                <span class="keyword">this</span>.top = <span class="keyword">this</span>.restoreY</span><br><span class="line">                <span class="keyword">this</span>.left = <span class="keyword">this</span>.restoreX</span><br><span class="line">                <span class="keyword">this</span>.width = <span class="keyword">this</span>.restoreW</span><br><span class="line">                <span class="keyword">this</span>.height = <span class="keyword">this</span>.restoreH</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.top &lt; tt &amp;&amp; <span class="keyword">this</span>.left &lt;= tl &amp;&amp; <span class="keyword">this</span>.top + <span class="keyword">this</span>.height &gt; tt &amp;&amp; <span class="keyword">this</span>.left + <span class="keyword">this</span>.width &gt; tl ||</span><br><span class="line">                <span class="keyword">this</span>.top &gt; tt &amp;&amp; <span class="keyword">this</span>.left &gt;= tl &amp;&amp; <span class="keyword">this</span>.top &lt; tt + th &amp;&amp; <span class="keyword">this</span>.left &lt; tl + tw) &#123; <span class="comment">/* 下边与上边重叠 */</span></span><br><span class="line">                <span class="keyword">this</span>.top = <span class="keyword">this</span>.restoreY</span><br><span class="line">                <span class="keyword">this</span>.left = <span class="keyword">this</span>.restoreX</span><br><span class="line">                <span class="keyword">this</span>.width = <span class="keyword">this</span>.restoreW</span><br><span class="line">                <span class="keyword">this</span>.height = <span class="keyword">this</span>.restoreH</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.top &lt;= tt &amp;&amp; <span class="keyword">this</span>.left &gt;= tl &amp;&amp; <span class="keyword">this</span>.top + <span class="keyword">this</span>.height &gt; tt &amp;&amp; <span class="keyword">this</span>.left &lt; tl + tw ||</span><br><span class="line">                <span class="keyword">this</span>.top &gt;= tt &amp;&amp; <span class="keyword">this</span>.left &lt;= tl &amp;&amp; <span class="keyword">this</span>.top &lt; tt + th &amp;&amp; <span class="keyword">this</span>.left &gt; tl + tw) &#123; <span class="comment">/* 上边与下边重叠（宽度不一样） */</span></span><br><span class="line">                <span class="keyword">this</span>.top = <span class="keyword">this</span>.restoreY</span><br><span class="line">                <span class="keyword">this</span>.left = <span class="keyword">this</span>.restoreX</span><br><span class="line">                <span class="keyword">this</span>.width = <span class="keyword">this</span>.restoreW</span><br><span class="line">                <span class="keyword">this</span>.height = <span class="keyword">this</span>.restoreH</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.left &gt;= tl &amp;&amp; <span class="keyword">this</span>.top &gt;= tt &amp;&amp; <span class="keyword">this</span>.left &lt; tl + tw &amp;&amp; <span class="keyword">this</span>.top &lt; tt + th ||</span><br><span class="line">                <span class="keyword">this</span>.top &gt; tt &amp;&amp; <span class="keyword">this</span>.left &lt;= tl &amp;&amp; <span class="keyword">this</span>.left + <span class="keyword">this</span>.width &gt; tl &amp;&amp; <span class="keyword">this</span>.top &lt; tt + th) &#123; <span class="comment">/* 左边与右边重叠 */</span></span><br><span class="line">                <span class="keyword">this</span>.top = <span class="keyword">this</span>.restoreY</span><br><span class="line">                <span class="keyword">this</span>.left = <span class="keyword">this</span>.restoreX</span><br><span class="line">                <span class="keyword">this</span>.width = <span class="keyword">this</span>.restoreW</span><br><span class="line">                <span class="keyword">this</span>.height = <span class="keyword">this</span>.restoreH</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.top &lt;= tt &amp;&amp; <span class="keyword">this</span>.left &gt;= tl &amp;&amp; <span class="keyword">this</span>.top + <span class="keyword">this</span>.height &gt; tt &amp;&amp; <span class="keyword">this</span>.left &lt; tl + tw ||</span><br><span class="line">                <span class="keyword">this</span>.top &gt;= tt &amp;&amp; <span class="keyword">this</span>.left &lt;= tl &amp;&amp; <span class="keyword">this</span>.top &lt; tt + th &amp;&amp; <span class="keyword">this</span>.left + <span class="keyword">this</span>.width &gt; tl) &#123; <span class="comment">/* 左边与右边重叠（高度不一样） */</span></span><br><span class="line">                <span class="keyword">this</span>.top = <span class="keyword">this</span>.restoreY</span><br><span class="line">                <span class="keyword">this</span>.left = <span class="keyword">this</span>.restoreX</span><br><span class="line">                <span class="keyword">this</span>.width = <span class="keyword">this</span>.restoreW</span><br><span class="line">                <span class="keyword">this</span>.height = <span class="keyword">this</span>.restoreH</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="comment">// 冲突检测</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>最后就是在停止移动和缩放时调用上面的方法就可以了（代码精简过）。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">handleUp: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.handle = <span class="literal">null</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.resizing) &#123;</span><br><span class="line">        <span class="keyword">this</span>.resizing = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">this</span>.conflictCheck() <span class="comment">// 冲突检测</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.dragging) &#123;</span><br><span class="line">        <span class="keyword">this</span>.dragging = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">this</span>.conflictCheck() <span class="comment">// 冲突检测</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="comment">// 鼠标松开</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-组件与组件之间进行对齐"><a href="#2-组件与组件之间进行对齐" class="headerlink" title="2.组件与组件之间进行对齐"></a>2.组件与组件之间进行对齐</h4><p>与冲突检测一样的套路。</p><blockquote><p>先在<code>props</code>中加入一个<code>snap</code>，让使用者自己选择是否使用此功能。为了更灵活，这里多添加了一个<code>snapTolerance</code>，当调用对齐时，用来设置组件与组件之间的对齐距离，以像素为单位。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 是否开启元素对齐 */</span></span><br><span class="line">snap: &#123;</span><br><span class="line">  type: <span class="built_in">Boolean</span>, <span class="attr">default</span>: <span class="literal">false</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">/* 当调用对齐时，用来设置组件与组件之间的对齐距离，以像素为单位。 */</span></span><br><span class="line">snapTolerance: &#123;</span><br><span class="line">  type: <span class="built_in">Number</span>,</span><br><span class="line">  <span class="keyword">default</span>: <span class="number">5</span>,</span><br><span class="line">  validator: <span class="function"><span class="keyword">function</span> (<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">typeof</span> val === <span class="string">'number'</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>然后就是设置<code>data-*</code>属性<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">setSnap: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.snap) &#123;</span><br><span class="line">        <span class="keyword">this</span>.$el.setAttribute(<span class="string">'data-is-snap'</span>, <span class="string">'true'</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.$el.setAttribute(<span class="string">'data-is-snap'</span>, <span class="string">'false'</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="comment">// 设置对齐元素</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>再然后就是主要方法<code>snapCheck</code>的编写。这里我翻看了一下JQuery UI中的<code>draggable</code>源码，并近乎copy的借鉴了过来。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">snapCheck: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.snap) &#123;</span><br><span class="line">        <span class="keyword">let</span> p = <span class="keyword">this</span>.$el.parentNode.childNodes <span class="comment">// 获取当前父节点下所有子节点</span></span><br><span class="line">        <span class="keyword">if</span> (p.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="keyword">let</span> x1 = <span class="keyword">this</span>.left</span><br><span class="line">          <span class="keyword">let</span> x2 = <span class="keyword">this</span>.left + <span class="keyword">this</span>.width</span><br><span class="line">          <span class="keyword">let</span> y1 = <span class="keyword">this</span>.top</span><br><span class="line">          <span class="keyword">let</span> y2 = <span class="keyword">this</span>.top + <span class="keyword">this</span>.height</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; p.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p[i] !== <span class="keyword">this</span>.$el &amp;&amp; p[i].className !== <span class="literal">undefined</span> &amp;&amp; p[i].getAttribute(<span class="string">'data-is-snap'</span>) !== <span class="string">'false'</span>) &#123;</span><br><span class="line">              <span class="keyword">let</span> l = p[i].offsetLeft <span class="comment">// 对齐目标的left</span></span><br><span class="line">              <span class="keyword">let</span> r = l + p[i].offsetWidth <span class="comment">// 对齐目标右侧距离窗口的left</span></span><br><span class="line">              <span class="keyword">let</span> t = p[i].offsetTop<span class="comment">// 对齐目标的top</span></span><br><span class="line">              <span class="keyword">let</span> b = t + p[i].offsetHeight <span class="comment">// 对齐目标右侧距离窗口的top</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">let</span> ts = <span class="built_in">Math</span>.abs(t - y2) &lt;= <span class="keyword">this</span>.snapTolerance</span><br><span class="line">              <span class="keyword">let</span> bs = <span class="built_in">Math</span>.abs(b - y1) &lt;= <span class="keyword">this</span>.snapTolerance</span><br><span class="line">              <span class="keyword">let</span> ls = <span class="built_in">Math</span>.abs(l - x2) &lt;= <span class="keyword">this</span>.snapTolerance</span><br><span class="line">              <span class="keyword">let</span> rs = <span class="built_in">Math</span>.abs(r - x1) &lt;= <span class="keyword">this</span>.snapTolerance</span><br><span class="line">              <span class="keyword">if</span> (ts) &#123;</span><br><span class="line">                <span class="keyword">this</span>.top = t - <span class="keyword">this</span>.height</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (bs) &#123;</span><br><span class="line">                <span class="keyword">this</span>.top = b</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (ls) &#123;</span><br><span class="line">                <span class="keyword">this</span>.left = l - <span class="keyword">this</span>.width</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (rs) &#123;</span><br><span class="line">                <span class="keyword">this</span>.left = r</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="comment">// 检测对齐元素</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>好了，最后就是在鼠标移动组件时及时调用就可以了。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">handleMove: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">this</span>.snapCheck()</span><br><span class="line">        <span class="keyword">this</span>.$emit(<span class="string">'dragging'</span>, <span class="keyword">this</span>.left, <span class="keyword">this</span>.top)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="comment">// 鼠标移动</span></span><br></pre></td></tr></table></figure></p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次的修改还算是非常顺利，顺便还把之前的一些代码进行了优化。<br>如果发现什么bug或者可以将代码优化的地方<strong>请劳烦告知我</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>clipboard 在 vue 中的使用</title>
      <link href="/posts/9ec137e7/"/>
      <url>/posts/9ec137e7/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>页面中用 <code>clipboard</code> 可以进行复制粘贴，<code>clipboard</code>能将内容直接写入剪切板</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save clipboard</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">       &lt;span&gt;&#123;&#123; code &#125;&#125;&lt;/span&gt;</span><br><span class="line">       &lt;i</span><br><span class="line">       class=&quot;el-icon-document&quot;</span><br><span class="line">       title=&quot;点击复制&quot;</span><br><span class="line">       @click=&quot;copyActiveCode($event,code )&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">// methods</span><br><span class="line">copyActiveCode(e, text) &#123;</span><br><span class="line">      const clipboard = new Clipboard(e.target, &#123; text: () =&gt; text &#125;)</span><br><span class="line">      clipboard.on(&apos;success&apos;, e =&gt; &#123;</span><br><span class="line">        this.$message(&#123; type: &apos;success&apos;, message: &apos;复制成功&apos; &#125;)</span><br><span class="line">        // 释放内存</span><br><span class="line">        clipboard.off(&apos;error&apos;)</span><br><span class="line">        clipboard.off(&apos;success&apos;)</span><br><span class="line">        clipboard.destroy()</span><br><span class="line">      &#125;)</span><br><span class="line">      clipboard.on(&apos;error&apos;, e =&gt; &#123;</span><br><span class="line">        // 不支持复制</span><br><span class="line">        this.$message(&#123; type: &apos;waning&apos;, message: &apos;该浏览器不支持自动复制&apos; &#125;)</span><br><span class="line">        // 释放内存</span><br><span class="line">        clipboard.off(&apos;error&apos;)</span><br><span class="line">        clipboard.off(&apos;success&apos;)</span><br><span class="line">        clipboard.destroy()</span><br><span class="line">      &#125;)</span><br><span class="line">      clipboard.onClick(e)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">       &lt;span&gt;&#123;&#123; code &#125;&#125;&lt;/span&gt;</span><br><span class="line">       &lt;i</span><br><span class="line">       id=&quot;tag-copy&quot; &lt;-- 作为选择器的标识使用用class也行 --&gt;</span><br><span class="line">       :data-clipboard-text=&quot;code&quot;  &lt;-- 这里放要复制的内容 --&gt;</span><br><span class="line">       class=&quot;el-icon-document&quot;</span><br><span class="line">       title=&quot;点击复制&quot;</span><br><span class="line">       @click=&quot;copyActiveCode($event,code)&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">// methods</span><br><span class="line">copyActiveCode() &#123;</span><br><span class="line">      const clipboard = new Clipboard(&quot;#tag-copy&quot;)</span><br><span class="line">      clipboard.on(&apos;success&apos;, e =&gt; &#123;</span><br><span class="line">        this.$message(&#123; type: &apos;success&apos;, message: &apos;复制成功&apos; &#125;)</span><br><span class="line">        // 释放内存</span><br><span class="line">        clipboard.destroy()</span><br><span class="line">      &#125;)</span><br><span class="line">      clipboard.on(&apos;error&apos;, e =&gt; &#123;</span><br><span class="line">        // 不支持复制</span><br><span class="line">        this.$message(&#123; type: &apos;waning&apos;, message: &apos;该浏览器不支持自动复制&apos; &#125;)</span><br><span class="line">        // 释放内存</span><br><span class="line">        clipboard.destroy()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中如何实现后台管理系统的权限控制</title>
      <link href="/posts/e3c7563d/"/>
      <url>/posts/e3c7563d/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>在广告机项目中，角色的权限管理是卡了挺久的一个难点。首先我们确定的权限控制分为两大部分，其中根据粒的大小分的更细：</p><ul><li>接口访问的权限控制    </li><li>页面的权限控制<ul><li>菜单中的页面是否能被访问</li><li>页面中的按钮（增、删、改）的权限控制是否显示</li></ul></li></ul><p>下面我们就看一看是如何实现这些个权限控制的。  </p><h3 id="二、接口访问的权限控制"><a href="#二、接口访问的权限控制" class="headerlink" title="二、接口访问的权限控制"></a>二、接口访问的权限控制</h3><p>接口权限就是对用户的校验。正常来说，在用户登录时服务器需要给前台返回一个Token,然后在以后前台每次调用接口时都需要带上这个Token,</p><p>然后服务端获取到这个Token后进行比对，如果通过则可以访问。</p><p>现有的做法是在登录成功的回调中将后台返回的Token直接存储到<code>sessionStorage</code>，然在请求时将Token取出放入headers中传给后台，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$http(&#123;</span><br><span class="line">          method: <span class="string">'get'</span>,</span><br><span class="line">          url: <span class="string">'test/query?id=20'</span>,</span><br><span class="line">          withCredentials: <span class="literal">true</span>,</span><br><span class="line">          headers: &#123;</span><br><span class="line">            token: sessionStorage.getItem(<span class="string">'token'</span>),</span><br><span class="line">            name: sessionStorage.getItem(<span class="string">'name'</span>)    <span class="comment">//应后台需求传的用户名</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">//请求成功后的操作</span></span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>后来在一些文章中发现axios可以在拦截器中直接将Token塞入<code>config.headers.Authorization</code>中，作为全局传入。下面是代码部分：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化Axios，并进行超时设置</span></span><br><span class="line"><span class="keyword">const</span> service = axios.create(&#123;</span><br><span class="line">    timeout: <span class="number">5000</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// baseURL</span></span><br><span class="line"><span class="comment">// axios.defaults.baseURL = 'https://api.github.com';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// http request 拦截器</span></span><br><span class="line"><span class="comment">// 每次请求都为http头增加Authorization字段，其内容为token</span></span><br><span class="line">service.interceptors.request.use(</span><br><span class="line">    config =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (store.state.user.token) &#123;</span><br><span class="line">            config.headers.Authorization = <span class="string">`token <span class="subst">$&#123;store.state.user.token&#125;</span>`</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config</span><br><span class="line">    &#125;,</span><br><span class="line">    err =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><h3 id="三、页面权限控制"><a href="#三、页面权限控制" class="headerlink" title="三、页面权限控制"></a>三、页面权限控制</h3><p>在前面已经说到，页面权限控制又分为两种：</p><ul><li><p>菜单中的页面是否能被访问</p></li><li><p>页面中的按钮（增、删、改）的权限控制是否显示</p></li></ul><p>这些权限一般是在固定页面进行配置，保存后记录到数据库中。</p><hr><p>按钮权限暂且不提，页面访问权限在实现中又可以分为两种方式：</p><ul><li>显示所有菜单，当用户访问不在自己权限内的菜单时，提示权限不足</li><li>只显示当前用户能访问的权限内菜单，如果用户通过URL进行强制访问，则会直接进入404</li></ul><p>既然展现出来后不能点，那算几个意思，逗我玩儿呢？所谓眼不见为净，综合考虑后，肯定是方案二比较符合良好的用户体验。</p><p>好，我们现在梳理一下大致的页面访问权限的流程：</p><p><img src="https://upload-images.jianshu.io/upload_images/12792466-dd0acd62e33bf9c7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="权限的流程"></p><p>在对流程梳理完成后我们开始进行详细的编写。</p><h4 id="1、创建路由表"><a href="#1、创建路由表" class="headerlink" title="1、创建路由表"></a>1、创建路由表</h4><p>创建路由表实际上没有什么难度，照着<a href="https://router.vuejs.org/zh-cn/essentials/getting-started.html" target="_blank" rel="noopener">vue-router官方文档</a>给的示例直接写就行了。但是因为有部分页面是不需要访问权限的，</p><p>所以需要将登录、404、维护等页面写到默认的路由中，而将其它的需要权限的页面写到一个变量或者一个文件中，这样可</p><p>以有效的减轻后续的维护压力。</p><p>下面将index.js的代码贴上，异步路由将适量减少，以免占过多篇幅。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'@/App'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'../store/index'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router);</span><br><span class="line"></span><br><span class="line"><span class="comment">//手动跳转的页面白名单</span></span><br><span class="line"><span class="keyword">const</span> whiteList = [</span><br><span class="line">  <span class="string">'/'</span></span><br><span class="line">];</span><br><span class="line"><span class="comment">//默认不需要权限的页面</span></span><br><span class="line"><span class="keyword">const</span> constantRouterMap = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    name: <span class="string">'登录'</span>,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/login'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/index'</span>,</span><br><span class="line">    name: <span class="string">'nav.Home'</span>,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/index'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/templateMake'</span>,</span><br><span class="line">    name: <span class="string">'模板制作'</span>,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Template/templateMake'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/programMack'</span>,</span><br><span class="line">    name: <span class="string">'节目制作'</span>,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Template/programMack'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/release'</span>,</span><br><span class="line">    name: <span class="string">'节目发布'</span>,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Program/release'</span>], resolve)</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">//注册路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> router = <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: constantRouterMap</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//异步路由（需要权限的页面）</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> asyncRouterMap = [</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/resource'</span>,</span><br><span class="line">    name: <span class="string">'nav.Resource'</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      permission: []</span><br><span class="line">    &#125;,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Resource/resource'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/template'</span>,</span><br><span class="line">    name: <span class="string">'nav.Template'</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      permission: []</span><br><span class="line">    &#125;,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Template/template'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/generalSet'</span>,</span><br><span class="line">    name: <span class="string">'nav.System'</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      permission: []</span><br><span class="line">    &#125;,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/SystemSet/generalSet'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">''</span>,</span><br><span class="line">    name: <span class="string">'nav.Log'</span>,</span><br><span class="line">    component: App,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/userLog'</span>,</span><br><span class="line">        name: <span class="string">'nav.UserLog'</span>,</span><br><span class="line">        meta: &#123;</span><br><span class="line">          permission: []</span><br><span class="line">        &#125;,</span><br><span class="line">        component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Log/userLog'</span>], resolve),</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/operatingLog'</span>,</span><br><span class="line">        name: <span class="string">'nav.SystemLog'</span>,</span><br><span class="line">        meta: &#123;</span><br><span class="line">          permission: []</span><br><span class="line">        &#125;,</span><br><span class="line">        component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Log/operatingLog'</span>], resolve),</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">  ]</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>注意事项：这里有一个需要非常注意的地方就是 404 页面一定要最后加载，如果放在constantRouterMap一同声明了404，后面的所以页面都会被拦截到404，详细的问题见<a href="https://link.juejin.im?target=https%3A%2F%2Fgithub.com%2Fvuejs%2Fvue-router%2Fissues%2F1176" target="_blank" rel="noopener">addRoutes when you’ve got a wildcard route for 404s does not work</a></p><h4 id="2、页面访问权限"><a href="#2、页面访问权限" class="headerlink" title="2、页面访问权限"></a>2、页面访问权限</h4><p>在开始时我们梳理了一个大致的页面访问权限流程。下面我们先实现最核心的部分：</p><p><img src="https://upload-images.jianshu.io/upload_images/12792466-74973f7e76c0ccc7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="访问权限流程"></p><p>我们首先获取用户权限列表，在这里我们将接触到vuex状态管理，<a href="https://vuex.vuejs.org/zh-cn/state.html" target="_blank" rel="noopener">官方文档</a>有详细介绍，这里就不过多描述了，下面请看代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"><span class="keyword">import</span> Axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex);</span><br><span class="line"><span class="keyword">const</span> axios = Axios.create();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  mode: <span class="string">'login'</span>,</span><br><span class="line">  list: []</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getters = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  setMode: <span class="function">(<span class="params">state, data</span>) =&gt;</span> &#123;</span><br><span class="line">    state.mode = data</span><br><span class="line">  &#125;,</span><br><span class="line">  setList: <span class="function">(<span class="params">state, data</span>) =&gt;</span> &#123;</span><br><span class="line">    state.list = data</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// 获取权限列表</span></span><br><span class="line">  getPermission(&#123;commit&#125;) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      axios(&#123;</span><br><span class="line">        url: <span class="string">'/privilege/queryPrivilege?id='</span> + sessionStorage.getItem(<span class="string">'privId'</span>),</span><br><span class="line">        methods: <span class="string">'get'</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">          token: sessionStorage.getItem(<span class="string">'token'</span>),</span><br><span class="line">          name: sessionStorage.getItem(<span class="string">'name'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 存储权限列表</span></span><br><span class="line">        commit(<span class="string">'setList'</span>, res.data.cust.privileges[<span class="number">0</span>].children);</span><br><span class="line">        resolve(res.data.cust.privileges[<span class="number">0</span>].children)</span><br><span class="line">      &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        reject()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions,</span><br><span class="line">  getters</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>好了，我们现在请求后台拿到了权限数据，并将数据存放到了vuex中，下面我们需要利用返回数据匹配之前写的异步路由表，将匹配结果和静态路由表结合，开成最终的实际路由表。</p><p>其中最关键的是利用vue-router2.2.0版本新添加的一个addRoutes方法，我们看看官方文档如何解释此方法的：</p><blockquote><p>router.addRoutes(routes) 2.2.0+<br>动态添加更多的路由规则。参数必须是一个符合 routes 选项要求的数组。</p></blockquote><p>那我们现在就可以开始使用addRoutes进行路由匹配了。下面看代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据权限匹配路由</span></span><br><span class="line"><span class="comment"> * @param &#123;array&#125; permission 权限列表（菜单列表）</span></span><br><span class="line"><span class="comment"> * @param &#123;array&#125; asyncRouter 异步路由对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">routerMatch</span>(<span class="params">permission, asyncRouter</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> routers = [];</span><br><span class="line">    <span class="comment">// 创建路由</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createRouter</span>(<span class="params">permission</span>) </span>&#123;</span><br><span class="line">         <span class="comment">// 根据路径匹配到的router对象添加到routers中即可</span></span><br><span class="line">      permission.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (item.children &amp;&amp; item.children.length) &#123;</span><br><span class="line">          createRouter(item.children)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> path = item.path;</span><br><span class="line">        <span class="comment">// 循环异步路由，将符合权限列表的路由加入到routers中</span></span><br><span class="line">        asyncRouter.find(<span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (s.path === <span class="string">''</span>) &#123;</span><br><span class="line">            s.children.find(<span class="function">(<span class="params">y</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (y.path === path) &#123;</span><br><span class="line">                y.meta.permission = item.permission;</span><br><span class="line">                routers.push(s);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (s.path === path) &#123;</span><br><span class="line">            s.meta.permission = item.permission;</span><br><span class="line">            routers.push(s);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    createRouter(permission)</span><br><span class="line">    resolve([routers])</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们编写导航钩子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, form, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (sessionStorage.getItem(<span class="string">'token'</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (to.path === <span class="string">'/'</span>) &#123;</span><br><span class="line">      router.replace(<span class="string">'/index'</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(store.state.list.length);</span><br><span class="line">      <span class="keyword">if</span> (store.state.list.length === <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="comment">//如果没有权限列表，将重新向后台请求一次</span></span><br><span class="line">        store.dispatch(<span class="string">'getPermission'</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//调用权限匹配的方法</span></span><br><span class="line">          routerMatch(res, asyncRouterMap).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="comment">//将匹配出来的权限列表进行addRoutes</span></span><br><span class="line">            router.addRoutes(res[<span class="number">0</span>]);</span><br><span class="line">            next(to.path)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          router.replace(<span class="string">'/'</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (to.matched.length) &#123;</span><br><span class="line">          next()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          router.replace(<span class="string">'/'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (whiteList.indexOf(to.path) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">      next()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      router.replace(<span class="string">'/'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>到这里我们已经完成了对页面访问的权限控制，接下来我们来讲解一下操作按扭的权限部分。</p><h3 id="四、数据操作权限"><a href="#四、数据操作权限" class="headerlink" title="四、数据操作权限"></a>四、数据操作权限</h3><p>是否还记得前面的路由配置中我们多出来的一个代码，下面我们拿出来看看：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//异步路由（需要权限的页面）</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> asyncRouterMap = [</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/resource'</span>,</span><br><span class="line">    name: <span class="string">'nav.Resource'</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      permission: []</span><br><span class="line">    &#125;,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Resource/resource'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/template'</span>,</span><br><span class="line">    name: <span class="string">'nav.Template'</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      permission: []</span><br><span class="line">    &#125;,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Template/template'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/generalSet'</span>,</span><br><span class="line">    name: <span class="string">'nav.System'</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      permission: []</span><br><span class="line">    &#125;,</span><br><span class="line">    component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/SystemSet/generalSet'</span>], resolve)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">''</span>,</span><br><span class="line">    name: <span class="string">'nav.Log'</span>,</span><br><span class="line">    component: App,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/userLog'</span>,</span><br><span class="line">        name: <span class="string">'nav.UserLog'</span>,</span><br><span class="line">        meta: &#123;</span><br><span class="line">          permission: []</span><br><span class="line">        &#125;,</span><br><span class="line">        component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Log/userLog'</span>], resolve),</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/operatingLog'</span>,</span><br><span class="line">        name: <span class="string">'nav.SystemLog'</span>,</span><br><span class="line">        meta: &#123;</span><br><span class="line">          permission: []</span><br><span class="line">        &#125;,</span><br><span class="line">        component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/Log/operatingLog'</span>], resolve),</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">  ]</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>为每个路由页面增加meta字段。在routerMatch函数中将匹配到的详细权限字段赋值到这里。这样在每个页面的route对象中就会得到这个字段。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">asyncRouter.find(<span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (s.path === <span class="string">''</span>) &#123;</span><br><span class="line">            s.children.find(<span class="function">(<span class="params">y</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (y.path === path) &#123;</span><br><span class="line">                  <span class="comment">//赋值</span></span><br><span class="line">                y.meta.permission = item.permission;</span><br><span class="line">                routers.push(s);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (s.path === path) &#123;</span><br><span class="line">            s.meta.permission = item.permission;</span><br><span class="line">            routers.push(s);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>接下来我们编写一个vue自定义指令对页面中需要进行鉴权的元素进行判断，比如类似这样的：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a @click=&quot;upload&quot; v-allow=&quot;&apos;3&apos;&quot;&gt;&lt;/a&gt; /* 3代表一个上传权限的ID，权限中有3则显示按钮 */</span><br></pre></td></tr></table></figure><p>我们直接注册一个全局指令，利用vnode来访问vue的方法。代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="comment">//按扭权限指令</span></span><br><span class="line">Vue.directive(<span class="string">'allow'</span>, &#123;</span><br><span class="line">  inserted: <span class="function">(<span class="params">el, binding, vnode</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> permissionList = vnode.context.$route.meta.permission;</span><br><span class="line">    <span class="keyword">if</span> (!permissionList.includes(binding.value)) &#123;</span><br><span class="line">      el.parentNode.removeChild(el)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>至此为止，权限控制流程就已经完全结束了，在最后我们再看一下完整的权限控制流程图吧.</p><h3 id="五、路由控制完整流程图"><a href="#五、路由控制完整流程图" class="headerlink" title="五、路由控制完整流程图"></a>五、路由控制完整流程图</h3><p><img src="https://upload-images.jianshu.io/upload_images/12792466-129d6298b1fa4e98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="流程图"></p><h3 id="六、参考文献"><a href="#六、参考文献" class="headerlink" title="六、参考文献"></a>六、参考文献</h3><blockquote><ol><li><p><a href="http://blog.csdn.net/harsima/article/details/77949448" target="_blank" rel="noopener">Vue + ElementUI 手撸后台管理网站之权限控制</a></p></li><li><p><a href="https://juejin.im/post/591aa14f570c35006961acac" target="_blank" rel="noopener">手摸手，带你用vue撸后台之权限控制</a></p></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中如何使用i18n实现国际化</title>
      <link href="/posts/8178f7e4/"/>
      <url>/posts/8178f7e4/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>  在4k广告机中需要实现多语言切换，这时候接触到国际化，前端框架无数，其中几种热门的框架都有相匹配的国际化插件工具。比如：</p><ul><li><code>vue</code> + <code>vue-i18n</code></li><li><code>angular</code> + <code>angular-translate</code></li><li><code>react</code> + <code>react-intl</code></li><li><p><code>jquery</code> + <code>jquery.i18n.property</code></p><p>在4K广告机项目中使用的前端框架为Vue，故而我们将使用vue-i18n这个插件进行国际化功能的实现。</p></li></ul><h3 id="二、最终实现效果"><a href="#二、最终实现效果" class="headerlink" title="二、最终实现效果"></a>二、最终实现效果</h3><p><img src="https://upload-images.jianshu.io/upload_images/12792466-22f9ed23c2d970c5.gif?imageMogr2/auto-orient/strip" alt="登录界面"></p><h3 id="三、国际化的实现"><a href="#三、国际化的实现" class="headerlink" title="三、国际化的实现"></a>三、国际化的实现</h3><p>  1、首先在自己的项目中安装 vue-i18n依赖包。这里使用NPM进行安装，如果没有科学上网请使用CNPM进行安装。</p><p><code>npm install vue-i18n --save-dev</code></p><p>  2、将i18n引入vue实例中，在项目中实现调用API和模板语法。现在在main.js中引入 vue-i18n。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueI18n <span class="keyword">from</span> <span class="string">'vue-i18n'</span>        <span class="comment">//引入vue-i18n</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueI18n);    <span class="comment">//通过插件的形式挂载</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*---------基本使用-----------*/</span></span><br><span class="line"><span class="keyword">const</span> i18n = <span class="keyword">new</span> VueI18n(&#123;</span><br><span class="line">  locale: <span class="string">'CN'</span>,    <span class="comment">// 语言标识</span></span><br><span class="line">  messages : &#123;</span><br><span class="line">    en: &#123;</span><br><span class="line">      message: &#123;</span><br><span class="line">        hello: <span class="string">'hello world'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    cn: &#123;</span><br><span class="line">      message: &#123;</span><br><span class="line">        hello: <span class="string">'你好、世界'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/*---------使用语言包-----------*/</span></span><br><span class="line"><span class="keyword">const</span> i18n = <span class="keyword">new</span> VueI18n(&#123;</span><br><span class="line">    locale: <span class="string">'zh'</span>,    <span class="comment">// 语言标识</span></span><br><span class="line">    <span class="comment">//this.$i18n.locale // 通过切换locale的值来实现语言切换</span></span><br><span class="line">    messages: &#123;</span><br><span class="line">      <span class="string">'zh'</span>: <span class="built_in">require</span>(<span class="string">'./common/lang/zh'</span>),   <span class="comment">// 中文语言包</span></span><br><span class="line">      <span class="string">'en'</span>: <span class="built_in">require</span>(<span class="string">'./common/lang/en'</span>)    <span class="comment">// 英文语言包</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  i18n,        <span class="comment">//挂载到实例，一定得在这个位置，而不是comonents中</span></span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span>,</span><br><span class="line">  components: &#123;</span><br><span class="line">    App</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p> 上面的代码正式将 vue-i18n 引入 vue 项目中，创建一个 i18n 实例对象，方便全局调用。我们通过 <code>this.$i18n.locale</code> 来进行语言的切换。</p><p> 3、接下来我们就需要新建两个js文件（或者josn文件）作为语言包。</p><p><img src="https://upload-images.jianshu.io/upload_images/12792466-4bfd78e047dea056.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="目录"></p><blockquote><p>其中en.js语言包中代码为： </p></blockquote> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  message: &#123;</span><br><span class="line">    login: <span class="string">'Login'</span>,</span><br><span class="line">    Username: <span class="string">'Username'</span>,</span><br><span class="line">    Password: <span class="string">'Password'</span>,</span><br><span class="line">    Captcha: <span class="string">'Captcha'</span>,</span><br><span class="line">    Language: <span class="string">'Language'</span>,</span><br><span class="line">    zh: <span class="string">'Chinese'</span>,</span><br><span class="line">    en: <span class="string">'English'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 其中zh.js语言包中代码为： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  message: &#123;</span><br><span class="line">    login: <span class="string">'登录'</span>,</span><br><span class="line">    Username: <span class="string">'用户名'</span>,</span><br><span class="line">    Password: <span class="string">'密码'</span>,</span><br><span class="line">    Captcha: <span class="string">'验证码'</span>,</span><br><span class="line">    Language: <span class="string">'语言'</span>,</span><br><span class="line">    zh: <span class="string">'中文'</span>,</span><br><span class="line">    en: <span class="string">'英文'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 最后我们只需要通过触发事件的形式，来控制 locale 的值，去调用对应的语言包就可以实现国际化啦。 </p><p>4、组件中触发事件切换 locale 的值，从而实现语言的切换。template代码： </p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"lang"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">v-model</span>=<span class="string">"language"</span> <span class="attr">size</span>=<span class="string">"mini"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-for</span>=<span class="string">"item of lang"</span> <span class="attr">:label</span>=<span class="string">"item.value"</span> <span class="attr">border</span>&gt;</span>&#123;&#123;item.label&#125;&#125;<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p> scrpit代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    mounted() &#123;</span><br><span class="line">      <span class="keyword">this</span>.$i18n.locale === <span class="string">'zh'</span> ? <span class="keyword">this</span>.language = <span class="number">0</span> : <span class="keyword">this</span>.language = <span class="number">1</span>   <span class="comment">//数据加载时判断当前属于哪种语言，为其单选按钮赋值</span></span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        language: <span class="number">0</span>,</span><br><span class="line">        lang: [&#123;</span><br><span class="line">          label: <span class="keyword">this</span>.$t(<span class="string">'message.zh'</span>),       <span class="comment">//模板语法的一种</span></span><br><span class="line">          value: <span class="number">0</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          label: <span class="keyword">this</span>.$t(<span class="string">'message.en'</span>),</span><br><span class="line">          value: <span class="number">1</span></span><br><span class="line">        &#125;],</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;    <span class="comment">//侦听器</span></span><br><span class="line">      language: <span class="function"><span class="keyword">function</span> (<span class="params">val</span>) </span>&#123;       <span class="comment">//侦听单选按钮的变化，从而进行切换语言</span></span><br><span class="line">        val === <span class="number">0</span> ? <span class="keyword">this</span>.$i18n.locale = <span class="string">'zh'</span> : <span class="keyword">this</span>.$i18n.locale = <span class="string">'en'</span>;</span><br><span class="line">        Vue.set(<span class="keyword">this</span>.lang, <span class="number">0</span>, &#123;<span class="attr">label</span>: <span class="keyword">this</span>.$t(<span class="string">'message.zh'</span>), <span class="attr">value</span>: <span class="number">0</span>&#125;);</span><br><span class="line">        Vue.set(<span class="keyword">this</span>.lang, <span class="number">1</span>, &#123;<span class="attr">label</span>: <span class="keyword">this</span>.$t(<span class="string">'message.en'</span>), <span class="attr">value</span>: <span class="number">1</span>&#125;)</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        this.lang: [&#123;</span></span><br><span class="line"><span class="comment">          label: this.$t('message.zh'),       //如果不使用Vue.set，也可以使用更新数据的方法</span></span><br><span class="line"><span class="comment">          value: 0</span></span><br><span class="line"><span class="comment">        &#125;, &#123;</span></span><br><span class="line"><span class="comment">          label: this.$t('message.en'),</span></span><br><span class="line"><span class="comment">          value: 1</span></span><br><span class="line"><span class="comment">        &#125;]</span></span><br><span class="line"><span class="comment">        **/</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：由于 JavaScript 的限制，Vue 不能检测当前变动的数组，只渲染一次，如果数据不更新视图就不更新的组件，如果切换语言则需要更新一下数据才能切换组件内的多语言。</p></blockquote><h3 id="四、vue-i18n-数据渲染的模板语法"><a href="#四、vue-i18n-数据渲染的模板语法" class="headerlink" title="四、vue-i18n 数据渲染的模板语法"></a>四、vue-i18n 数据渲染的模板语法</h3><p>   模板语法暂时分为三种：</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//vue组件模板的使用</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;$t('message.zh')&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//vue组件模板数据绑定的使用</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">:placeholder</span>=<span class="string">"$t('message.zh')"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//vue组件data中赋值的使用</span><br><span class="line">data:&#123;</span><br><span class="line">    msg:this.$t('message.zh');</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、Element-UI组件库与vue-i18n的兼容问题"><a href="#五、Element-UI组件库与vue-i18n的兼容问题" class="headerlink" title="五、Element UI组件库与vue-i18n的兼容问题"></a>五、Element UI组件库与vue-i18n的兼容问题</h3><p>  由于项目中使用了Element UI组件库，它里面内置的一些文字也是需要国际化，好在Element UI是有国际化的支持。但是Element UI默认只兼容vue-i18n的5.x版本，而现在vue-i18n的版本已经到了7.x，Element UI官方文档中“<a href="http://element.eleme.io/#/zh-CN/component/i18n" target="_blank" rel="noopener">国际化</a>”一节中对此有具体说明。下面将手动设置内容贴出来：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> VueI18n <span class="keyword">from</span> <span class="string">'vue-i18n'</span></span><br><span class="line"><span class="keyword">import</span> enLocale <span class="keyword">from</span> <span class="string">'element-ui/lib/locale/lang/en'</span>        <span class="comment">//引入Element UI的英文包</span></span><br><span class="line"><span class="keyword">import</span> zhLocale <span class="keyword">from</span> <span class="string">'element-ui/lib/locale/lang/zh-CN'</span>     <span class="comment">//引入Element UI的中文包</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueI18n);</span><br><span class="line">Vue.use(ElementUI, &#123;</span><br><span class="line">  i18n: <span class="function">(<span class="params">key, value</span>) =&gt;</span> i18n.t(key, value)</span><br><span class="line">&#125;); <span class="comment">//兼容i18n 7.x版本设置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> i18n = <span class="keyword">new</span> VueI18n(&#123;</span><br><span class="line">  locale: <span class="string">'zh'</span>, <span class="comment">// 语言标识</span></span><br><span class="line">  messages: &#123;</span><br><span class="line">    zh: <span class="built_in">Object</span>.assign(<span class="built_in">require</span>(<span class="string">'@/components/common/lang/zh'</span>), zhLocale),  <span class="comment">//这里需要注意一下，是如何导入多个语言包的</span></span><br><span class="line">    en: <span class="built_in">Object</span>.assign(<span class="built_in">require</span>(<span class="string">'@/components/common/lang/en'</span>), enLocale),</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>注意：关于导入多个语言包时遇到的问题，我是在Element UI 国际化文档中发现的解决办法。</p></blockquote><h3 id="六、路由与面包屑导航国际化的语法问题"><a href="#六、路由与面包屑导航国际化的语法问题" class="headerlink" title="六、路由与面包屑导航国际化的语法问题"></a>六、路由与面包屑导航国际化的语法问题</h3><p>  在对面包屑导航进行国际化时不知道如何进行。在网上翻阅了一些资料，得到如下代码，完美解决问题：</p><p>  router.js(路由配置文件)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/index'</span>,</span><br><span class="line">  name: <span class="string">'nav.Home'</span>,       <span class="comment">//直接点出对应的文字</span></span><br><span class="line">  component: <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/index'</span>], resolve)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  Breadcrumb.vue(面包屑导航组件)</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"Breadcrumb"</span>&gt;</span><br><span class="line">    &lt;el-breadcrumb separator-<span class="class"><span class="keyword">class</span></span>=<span class="string">"el-icon-arrow-right"</span>&gt;</span><br><span class="line">      &lt;el-breadcrumb-item :to=<span class="string">"&#123; path: '/index' &#125;"</span>&gt;&#123;&#123;$t(<span class="string">'nav.Home'</span>)&#125;&#125;&lt;<span class="regexp">/el-breadcrumb-item&gt;</span></span><br><span class="line"><span class="regexp">        /</span>*注意&#123;&#123;$t(item.name)&#125;&#125;*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">      &lt;el-breadcrumb-item v-for="item in $route.matched" :to="&#123; path: item.path&#125;"&gt;&#123;&#123;$t(item.name)&#125;&#125;&lt;/</span>el-breadcrumb-item&gt;</span><br><span class="line">    &lt;<span class="regexp">/el-breadcrumb&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br></pre></td></tr></table></figure><h3 id="七、至此，国际化的坑算是踩完了。"><a href="#七、至此，国际化的坑算是踩完了。" class="headerlink" title="七、至此，国际化的坑算是踩完了。"></a>七、至此，国际化的坑算是踩完了。</h3>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue $emit子组件传出多个参数，如何在父组件中在接收所有参数的同时添加自定义参数</title>
      <link href="/posts/534ba2c9/"/>
      <url>/posts/534ba2c9/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>很多时候用<code>$emit</code>携带参数传出事件，并且又需要在父组件中使用自定义参数时，这时我们就无法接受到子组件传出的参数了。<br>找到了两种方法可以同时添加自定义参数的方法。</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>子组件传出单个参数时：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">this</span>.$emit(<span class="string">'test'</span>,<span class="keyword">this</span>.param)</span><br><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">@test=<span class="string">'test($event,userDefined)'</span></span><br></pre></td></tr></table></figure></p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>子组件传出多个参数时：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="keyword">this</span>.$emit(<span class="string">'test'</span>,<span class="keyword">this</span>.param1，<span class="keyword">this</span>.param2, <span class="keyword">this</span>.param3)</span><br><span class="line"><span class="comment">// 父组件  arguments 是以数组的形式传入</span></span><br><span class="line">@test=<span class="string">'test(arguments,userDefined)'</span></span><br></pre></td></tr></table></figure></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://github.com/vuejs/vue/issues/5735" target="_blank" rel="noopener">https://github.com/vuejs/vue/issues/5735</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置资源文件（图片、视频等）文件链接在浏览器中直接下载</title>
      <link href="/posts/b55a5736/"/>
      <url>/posts/b55a5736/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>前端使用<code>a</code>标签下载图片文件时因为浏览器机制问题导致会直接打开图片链接进行预览。<br>为了方便，不需要后台进行处理传输文件流返回。所以进行nginx配置，让链接图片在浏览器中直接下载</p><h3 id="nginx配置信息"><a href="#nginx配置信息" class="headerlink" title="nginx配置信息"></a>nginx配置信息</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen <span class="number">8086</span>;</span><br><span class="line">        server_name <span class="number">192.168</span><span class="number">.1</span><span class="number">.66</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http:<span class="comment">//127.0.0.1:8086;</span></span><br><span class="line">            root html;</span><br><span class="line">            index index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        location /image/ &#123;</span><br><span class="line">            root html/devGif;</span><br><span class="line">            autoindex on;</span><br><span class="line">            <span class="comment">// 主要配置</span></span><br><span class="line">             <span class="keyword">if</span> ($request_filename ~* ^.*?.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx|jpg|png)$)&#123;</span><br><span class="line">               add_header Content-Disposition <span class="string">'attachment'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">//end</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作并发布第一个vue组件的npm包</title>
      <link href="/posts/ec9660d3/"/>
      <url>/posts/ec9660d3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在网上找到一个<a href="http://www.zhangxinxu.com/wordpress/?p=1002" target="_blank" rel="noopener"> 网页制作辅助工具-jQuery标尺参考线插件 </a>，觉得在现在的一个项目中能用的上，插件是基于JQuery的，但是现在的项目是用vue写的。So…,<br>就照葫芦画瓢改装成了Vue组件，总的来说算是一个用处较多的组件，于是乎，就想着把它上传到Npm上分享出来。<br>以前只用过别人的包，这一次自己上传一个乐呵乐呵…顺便记录发布一下过程。</p></blockquote><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/gorkys/vue-ruler-tool" target="_blank" rel="noopener">https://github.com/gorkys/vue-ruler-tool</a></p><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><p>这里用的是<code>webpack-simple</code>,可以理解为精简版的<code>vue-cli</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack-simple vue-ruler-tool</span><br></pre></td></tr></table></figure></p><p>安装好后再就是一顿常规操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm dev</span><br></pre></td></tr></table></figure></p><p>项目结构<br><img src="https://upload-images.jianshu.io/upload_images/12792466-6e451ae23fcd1ed0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="项目结构"></p><blockquote><p>原结构中红框里是放的vue的logo图片，用不着的东西，所以这里就把改成了组件文件夹与组件文件</p></blockquote><p>还需要在<code>src</code>下面新建一个<code>index.js</code>作为入口文件，代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/index.js</span></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> &#125; <span class="keyword">from</span> <span class="string">'./components/vue-ruler-tool'</span></span><br></pre></td></tr></table></figure></p><h3 id="修改package-json"><a href="#修改package-json" class="headerlink" title="修改package.json"></a>修改package.json</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"vue-ruler-tool"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"vue标尺辅助线"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"gorkys"</span>,</span><br><span class="line">  "license": "MIT", // 开源协议</span><br><span class="line">  // 采用commonJs入口文件，如果不配置，我们在其他项目中就不用import XX from XX来引用了，只能以包名作为起点来指定相对的路径</span><br><span class="line">  "main": "dist/index.js", </span><br><span class="line">  "jsnext:main": "src/index.js", // 采用es6模块化入口</span><br><span class="line">  "private": false, // 因为组件包是公用的，所以private为false</span><br><span class="line">  "scripts": &#123;</span><br><span class="line">    "dev": "cross-env NODE_ENV=development webpack-dev-server --open --hot",</span><br><span class="line">    "build": "cross-env NODE_ENV=production webpack --progress --hide-modules"</span><br><span class="line">  &#125;,</span><br><span class="line">// 指定代码所在的仓库地址</span><br><span class="line">  "repository": &#123;</span><br><span class="line">    "type": "git",</span><br><span class="line">    "url": "https://github.com/mauricius/vue-draggable-resizable.git"</span><br><span class="line">  &#125;,</span><br><span class="line">// 提交bug的地址</span><br><span class="line">  "bugs": &#123;</span><br><span class="line">    "url": "https://github.com/mauricius/vue-draggable-resizable/issues"</span><br><span class="line">  &#125;,</span><br><span class="line">  // 项目官网的url</span><br><span class="line">  "homepage": "https://github.com/mauricius/vue-draggable-resizable",</span><br><span class="line">  "keywords": [</span><br><span class="line">    "vue",</span><br><span class="line">    "component",</span><br><span class="line">    "dragabble",</span><br><span class="line">    <span class="string">"resizable"</span></span><br><span class="line">  ], // 指定关键字</span><br><span class="line">  "dependencies": &#123;</span><br><span class="line">    "vue": "^2.5.11"</span><br><span class="line">  &#125;,</span><br><span class="line">  "browserslist": [</span><br><span class="line">    "&gt; 1%",</span><br><span class="line">    "last 2 versions",</span><br><span class="line">    <span class="string">"not ie &lt;= 8"</span></span><br><span class="line">  ],</span><br><span class="line">  "devDependencies": &#123;</span><br><span class="line">   ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改-gitignore"><a href="#修改-gitignore" class="headerlink" title="修改.gitignore"></a>修改.gitignore</h3><blockquote><p>因为要用dist文件夹，所以在.gitignore文件中把dist/去掉。</p></blockquote><h3 id="修改webpack-config-js"><a href="#修改webpack-config-js" class="headerlink" title="修改webpack.config.js"></a>修改webpack.config.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/main.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'./dist'</span>),</span><br><span class="line">    publicPath: <span class="string">'/dist/'</span>,</span><br><span class="line">    filename: <span class="string">'build.js'</span></span><br><span class="line">  &#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 新</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'./dist'</span>),</span><br><span class="line">    publicPath: <span class="string">'/dist/'</span>,</span><br><span class="line">    filename: <span class="string">'index.js'</span>,</span><br><span class="line">    libraryTarget: <span class="string">'umd'</span>,</span><br><span class="line">    umdNamedDefine: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">...</span><br><span class="line">｝</span><br></pre></td></tr></table></figure><h3 id="测试插件"><a href="#测试插件" class="headerlink" title="测试插件"></a>测试插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br><span class="line">npm pack</span><br></pre></td></tr></table></figure><blockquote><p>npm pack 之后，就会在当前目录下生成 一个vue-ruler-tool-1.0.0.tgz 的文件。<br>打开一个新的vue项目，将vue-ruler-tool-1.0.0.taz放到目录中，在当前路径下执行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-ruler-tool-1.0.0.tgz</span><br></pre></td></tr></table></figure><blockquote><p>在新项目中引用组件就可以使用了</p></blockquote><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>在引用后报错无法解析，需要检查<code>webpack.config.js</code>配置的输出文件路径是否与<code>package.json</code>一样。</p><h3 id="发布到npm"><a href="#发布到npm" class="headerlink" title="发布到npm"></a>发布到npm</h3><ul><li>1、注册</li></ul><p><a href="https://www.npmjs.com/" target="_blank" rel="noopener">进入官网，注册帐号</a></p><ul><li>2、登录并发布</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm login</span><br><span class="line">npm publish</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/12792466-4e1d49e14e7cb626.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录"></p><blockquote><p>提示报错是因为注册完后没有进行邮箱验证，验证完成即可发布成功</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/12792466-708cd63bbf0f181d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="成功"></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://blog.csdn.net/hamupp/article/details/79337643" target="_blank" rel="noopener">如何制作并发布一个vue的组件的npm包</a><br><a href="https://segmentfault.com/a/1190000009540499" target="_blank" rel="noopener">发布自己第一个npm 组件包（基于Vue的文字跑马灯组件）</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于vue的网页标尺辅助线工具(vue-ruler-tool)</title>
      <link href="/posts/df3af9cf/"/>
      <url>/posts/df3af9cf/</url>
      
        <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/12792466-b910b0ac21305c52.gif?imageMogr2/auto-orient/strip" alt="标尺辅助线.gif"></p><h1 id="vue-ruler-tool"><a href="#vue-ruler-tool" class="headerlink" title="vue-ruler-tool"></a>vue-ruler-tool</h1><hr><blockquote><p>最近在网上找到一个<a href="http://www.zhangxinxu.com/wordpress/?p=1002" target="_blank" rel="noopener"> 网页制作辅助工具-jQuery标尺参考线插件 </a>，觉得在现在的一个项目中能用的上，插件是基于JQuery的，但是现在的项目是用vue写的。So…,<br>就照葫芦画瓢改装成了Vue组件，总的来说算是一个用处较多的组件，于是乎，就想着把它分享出来。</p></blockquote><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/gorkys/vue-ruler-tool" target="_blank" rel="noopener">https://github.com/gorkys/vue-ruler-tool</a></p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>没有依赖</li><li>可拖动的辅助线</li><li>快捷键支持<blockquote><p>好吧，其实这个组件没什么太多的特点~</p></blockquote></li></ul><h3 id="安装与基本用法"><a href="#安装与基本用法" class="headerlink" title="安装与基本用法"></a>安装与基本用法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save vue-ruler-tool</span><br></pre></td></tr></table></figure><p>全局注册<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRulerTool <span class="keyword">from</span> <span class="string">'vue-ruler-tool'</span></span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">'vue-ruler-tool'</span>, VueRulerTool)</span><br></pre></td></tr></table></figure></p><p>你现在就可以使用该组件了<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">vue-ruler-tool</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:content-layout</span>=<span class="string">"&#123;left:200,top:100&#125;"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:is-scale-revise</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:preset-line</span>=<span class="string">"presetLine"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">vue-ruler-tool</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> VueRulerTool <span class="keyword">from</span> <span class="string">'vue-ruler-tool'</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'app'</span>,</span></span><br><span class="line">  components:&#123;</span><br><span class="line">    VueRulerTool</span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      presetLine: [&#123; <span class="attr">type</span>: <span class="string">'l'</span>, <span class="attr">site</span>: <span class="number">100</span> &#125;, &#123; <span class="attr">type</span>: <span class="string">'v'</span>, <span class="attr">site</span>: <span class="number">200</span> &#125;]</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="Props"><a href="#Props" class="headerlink" title="Props"></a>Props</h3><p><strong>position</strong></p><p>类型:<code>String</code></p><p>默认值: <code>relative</code></p><p>可能值:<code>[&#39;absolute&#39;, &#39;fixed&#39;, &#39;relative&#39;, &#39;static&#39;, &#39;inherit&#39;]</code></p><p>规定标尺工具的定位类型<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vue-ruler-tool</span> <span class="attr">:position</span>=<span class="string">"'fixed'"</span> &gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>isHotKey</strong></p><p>类型: <code>Boolean</code></p><p>默认值: <code>true</code></p><p>快捷键键开关，目前仅支持快捷键<code>R</code>标尺显示开关<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vue-ruler-tool</span> <span class="attr">:is-hot-key</span>=<span class="string">"ture"</span> &gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>isScaleRevise</strong></p><p>类型: <code>Boolean</code></p><p>默认值: <code>false</code></p><p>刻度修正(根据content进行刻度重置),意思就是从内容的位置开始从0计数<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vue-ruler-tool</span> <span class="attr">:is-scale-revise</span>=<span class="string">"ture"</span> &gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>presetLine</strong></p><p>类型: <code>Array</code></p><p>默认值: <code>[]</code></p><p>接受格式:<code>[{ type: &#39;l&#39;, site: 50 }, { type: &#39;v&#39;, site: 180 }]</code></p><p>预置参考线<code>l</code>代表水平线，<code>v</code>代表垂直线，<code>site</code>为Number类型<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vue-ruler-tool</span> <span class="attr">:preset-line</span>=<span class="string">"[&#123; type: 'l', site: 100 &#125;, &#123; type: 'v', site: 200 &#125;]"</span> &gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>contentLayout</strong></p><p>类型: <code>Object</code></p><p>默认值: <code>{ top: 50, left: 50 }</code></p><p>内容部分布局分布，及内容摆放位置<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vue-ruler-tool</span> <span class="attr">:content-layout</span>=<span class="string">"&#123;left:200,top:100&#125;"</span> &gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><p><strong>quickGeneration</strong></p><p>参数:<code>[{ type: &#39;l&#39;, site: 100 }, { type: &#39;v&#39;, site: 200 }]</code></p><p>快速设置参考线，一般用来通过弹窗让用户输入<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vue-ruler-tool</span> <span class="attr">ref</span>=<span class="string">'rulerTool'</span> &gt;</span></span><br><span class="line">let params=[</span><br><span class="line">        &#123; type: 'l', site: 100 &#125;,</span><br><span class="line">        &#123; type: 'v', site: 200 &#125;</span><br><span class="line">]</span><br><span class="line">this.$refs.rulerTool.quickGeneration(params)</span><br></pre></td></tr></table></figure></p><h3 id="发布到NPM教程"><a href="#发布到NPM教程" class="headerlink" title="发布到NPM教程"></a>发布到NPM教程</h3><p><a href="https://www.jianshu.com/p/27de92e912cb" target="_blank" rel="noopener">制作并发布第一个vue组件的npm包</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
